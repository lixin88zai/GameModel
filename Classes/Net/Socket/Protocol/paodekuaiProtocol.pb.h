// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paodekuaiProtocol.proto

#ifndef PROTOBUF_paodekuaiProtocol_2eproto__INCLUDED
#define PROTOBUF_paodekuaiProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

class REQHold;
class ACKIsTimeout;
class ACKHold;
class REQUserLogin;
class ACKUserLogin;
class SystemHorn;
class NTFUseHorn;
class REQMatchTable;
class ACKMatchTable;
class REQPrivyJoinGame;
class ACKPrivyJoinGame;
class REQLeaveGame;
class ACKLeaveGame;
class REQRejoinGame;
class ACKRejoinGame;
class REQPrivySitDown;
class ACKPrivySitDown;
class REQReady;
class ACKReady;
class TableEventItem;
class TableInfoItem;
class TableInfo;
class UserInfo;
class NTFTableEvent;
class PlayerGameInfo;
class NTFGameInit;
class NTFDealCards;
class REQDealEnd;
class NTFToken;
class REQPlayCards;
class NTFPlayCards;
class NTFPassCards;
class NTFResetCards;
class ResultItem;
class NTFResult;
class BombResultItem;
class NTFBombResult;
class FinalResultItem;
class NTFFinalResult;
class NTFGameSchedule;
class BoardInfoItem;
class NTFBoardInfo;
class NTFPropInfo;
class REQChat;
class NTFChat;
class PlayerData;
class MutiPlayerData;
class PdkTypeData;

// ===================================================================

class REQHold : public ::google::protobuf::Message {
 public:
  REQHold();
  virtual ~REQHold();

  REQHold(const REQHold& from);

  inline REQHold& operator=(const REQHold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQHold& default_instance();

  void Swap(REQHold* other);

  // implements Message ----------------------------------------------

  REQHold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQHold& from);
  void MergeFrom(const REQHold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:REQHold)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQHold* default_instance_;
};
// -------------------------------------------------------------------

class ACKIsTimeout : public ::google::protobuf::Message {
 public:
  ACKIsTimeout();
  virtual ~ACKIsTimeout();

  ACKIsTimeout(const ACKIsTimeout& from);

  inline ACKIsTimeout& operator=(const ACKIsTimeout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKIsTimeout& default_instance();

  void Swap(ACKIsTimeout* other);

  // implements Message ----------------------------------------------

  ACKIsTimeout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKIsTimeout& from);
  void MergeFrom(const ACKIsTimeout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKIsTimeout)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKIsTimeout* default_instance_;
};
// -------------------------------------------------------------------

class ACKHold : public ::google::protobuf::Message {
 public:
  ACKHold();
  virtual ~ACKHold();

  ACKHold(const ACKHold& from);

  inline ACKHold& operator=(const ACKHold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKHold& default_instance();

  void Swap(ACKHold* other);

  // implements Message ----------------------------------------------

  ACKHold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKHold& from);
  void MergeFrom(const ACKHold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result_id = 1;
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKHold)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKHold* default_instance_;
};
// -------------------------------------------------------------------

class REQUserLogin : public ::google::protobuf::Message {
 public:
  REQUserLogin();
  virtual ~REQUserLogin();

  REQUserLogin(const REQUserLogin& from);

  inline REQUserLogin& operator=(const REQUserLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQUserLogin& default_instance();

  void Swap(REQUserLogin* other);

  // implements Message ----------------------------------------------

  REQUserLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQUserLogin& from);
  void MergeFrom(const REQUserLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required bytes session_key = 2;
  inline bool has_session_key() const;
  inline void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  inline const ::std::string& session_key() const;
  inline void set_session_key(const ::std::string& value);
  inline void set_session_key(const char* value);
  inline void set_session_key(const void* value, size_t size);
  inline ::std::string* mutable_session_key();
  inline ::std::string* release_session_key();
  inline void set_allocated_session_key(::std::string* session_key);

  // required int32 client_version = 3;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::int32 client_version() const;
  inline void set_client_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:REQUserLogin)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_key();
  inline void clear_has_session_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::std::string* session_key_;
  ::google::protobuf::int32 client_version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQUserLogin* default_instance_;
};
// -------------------------------------------------------------------

class ACKUserLogin : public ::google::protobuf::Message {
 public:
  ACKUserLogin();
  virtual ~ACKUserLogin();

  ACKUserLogin(const ACKUserLogin& from);

  inline ACKUserLogin& operator=(const ACKUserLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKUserLogin& default_instance();

  void Swap(ACKUserLogin* other);

  // implements Message ----------------------------------------------

  ACKUserLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKUserLogin& from);
  void MergeFrom(const ACKUserLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKUserLogin)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKUserLogin* default_instance_;
};
// -------------------------------------------------------------------

class SystemHorn : public ::google::protobuf::Message {
 public:
  SystemHorn();
  virtual ~SystemHorn();

  SystemHorn(const SystemHorn& from);

  inline SystemHorn& operator=(const SystemHorn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemHorn& default_instance();

  void Swap(SystemHorn* other);

  // implements Message ----------------------------------------------

  SystemHorn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemHorn& from);
  void MergeFrom(const SystemHorn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:SystemHorn)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static SystemHorn* default_instance_;
};
// -------------------------------------------------------------------

class NTFUseHorn : public ::google::protobuf::Message {
 public:
  NTFUseHorn();
  virtual ~NTFUseHorn();

  NTFUseHorn(const NTFUseHorn& from);

  inline NTFUseHorn& operator=(const NTFUseHorn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFUseHorn& default_instance();

  void Swap(NTFUseHorn* other);

  // implements Message ----------------------------------------------

  NTFUseHorn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFUseHorn& from);
  void MergeFrom(const NTFUseHorn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 horn_type = 1;
  inline bool has_horn_type() const;
  inline void clear_horn_type();
  static const int kHornTypeFieldNumber = 1;
  inline ::google::protobuf::int32 horn_type() const;
  inline void set_horn_type(::google::protobuf::int32 value);

  // optional bytes horn_content = 2;
  inline bool has_horn_content() const;
  inline void clear_horn_content();
  static const int kHornContentFieldNumber = 2;
  inline const ::std::string& horn_content() const;
  inline void set_horn_content(const ::std::string& value);
  inline void set_horn_content(const char* value);
  inline void set_horn_content(const void* value, size_t size);
  inline ::std::string* mutable_horn_content();
  inline ::std::string* release_horn_content();
  inline void set_allocated_horn_content(::std::string* horn_content);

  // @@protoc_insertion_point(class_scope:NTFUseHorn)
 private:
  inline void set_has_horn_type();
  inline void clear_has_horn_type();
  inline void set_has_horn_content();
  inline void clear_has_horn_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* horn_content_;
  ::google::protobuf::int32 horn_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFUseHorn* default_instance_;
};
// -------------------------------------------------------------------

class REQMatchTable : public ::google::protobuf::Message {
 public:
  REQMatchTable();
  virtual ~REQMatchTable();

  REQMatchTable(const REQMatchTable& from);

  inline REQMatchTable& operator=(const REQMatchTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQMatchTable& default_instance();

  void Swap(REQMatchTable* other);

  // implements Message ----------------------------------------------

  REQMatchTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQMatchTable& from);
  void MergeFrom(const REQMatchTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomid = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:REQMatchTable)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQMatchTable* default_instance_;
};
// -------------------------------------------------------------------

class ACKMatchTable : public ::google::protobuf::Message {
 public:
  ACKMatchTable();
  virtual ~ACKMatchTable();

  ACKMatchTable(const ACKMatchTable& from);

  inline ACKMatchTable& operator=(const ACKMatchTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKMatchTable& default_instance();

  void Swap(ACKMatchTable* other);

  // implements Message ----------------------------------------------

  ACKMatchTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKMatchTable& from);
  void MergeFrom(const ACKMatchTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // optional int32 tableid = 3;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableidFieldNumber = 3;
  inline ::google::protobuf::int32 tableid() const;
  inline void set_tableid(::google::protobuf::int32 value);

  // optional int32 seatid = 4;
  inline bool has_seatid() const;
  inline void clear_seatid();
  static const int kSeatidFieldNumber = 4;
  inline ::google::protobuf::int32 seatid() const;
  inline void set_seatid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKMatchTable)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_seatid();
  inline void clear_has_seatid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 seatid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKMatchTable* default_instance_;
};
// -------------------------------------------------------------------

class REQPrivyJoinGame : public ::google::protobuf::Message {
 public:
  REQPrivyJoinGame();
  virtual ~REQPrivyJoinGame();

  REQPrivyJoinGame(const REQPrivyJoinGame& from);

  inline REQPrivyJoinGame& operator=(const REQPrivyJoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQPrivyJoinGame& default_instance();

  void Swap(REQPrivyJoinGame* other);

  // implements Message ----------------------------------------------

  REQPrivyJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQPrivyJoinGame& from);
  void MergeFrom(const REQPrivyJoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required bytes session_key = 2;
  inline bool has_session_key() const;
  inline void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  inline const ::std::string& session_key() const;
  inline void set_session_key(const ::std::string& value);
  inline void set_session_key(const char* value);
  inline void set_session_key(const void* value, size_t size);
  inline ::std::string* mutable_session_key();
  inline ::std::string* release_session_key();
  inline void set_allocated_session_key(::std::string* session_key);

  // required int32 client_version = 3;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::int32 client_version() const;
  inline void set_client_version(::google::protobuf::int32 value);

  // required int32 table_id = 4;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 4;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:REQPrivyJoinGame)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_key();
  inline void clear_has_session_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_table_id();
  inline void clear_has_table_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::std::string* session_key_;
  ::google::protobuf::int32 client_version_;
  ::google::protobuf::int32 table_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQPrivyJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class ACKPrivyJoinGame : public ::google::protobuf::Message {
 public:
  ACKPrivyJoinGame();
  virtual ~ACKPrivyJoinGame();

  ACKPrivyJoinGame(const ACKPrivyJoinGame& from);

  inline ACKPrivyJoinGame& operator=(const ACKPrivyJoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKPrivyJoinGame& default_instance();

  void Swap(ACKPrivyJoinGame* other);

  // implements Message ----------------------------------------------

  ACKPrivyJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKPrivyJoinGame& from);
  void MergeFrom(const ACKPrivyJoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKPrivyJoinGame)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKPrivyJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class REQLeaveGame : public ::google::protobuf::Message {
 public:
  REQLeaveGame();
  virtual ~REQLeaveGame();

  REQLeaveGame(const REQLeaveGame& from);

  inline REQLeaveGame& operator=(const REQLeaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQLeaveGame& default_instance();

  void Swap(REQLeaveGame* other);

  // implements Message ----------------------------------------------

  REQLeaveGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQLeaveGame& from);
  void MergeFrom(const REQLeaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:REQLeaveGame)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQLeaveGame* default_instance_;
};
// -------------------------------------------------------------------

class ACKLeaveGame : public ::google::protobuf::Message {
 public:
  ACKLeaveGame();
  virtual ~ACKLeaveGame();

  ACKLeaveGame(const ACKLeaveGame& from);

  inline ACKLeaveGame& operator=(const ACKLeaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKLeaveGame& default_instance();

  void Swap(ACKLeaveGame* other);

  // implements Message ----------------------------------------------

  ACKLeaveGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKLeaveGame& from);
  void MergeFrom(const ACKLeaveGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKLeaveGame)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKLeaveGame* default_instance_;
};
// -------------------------------------------------------------------

class REQRejoinGame : public ::google::protobuf::Message {
 public:
  REQRejoinGame();
  virtual ~REQRejoinGame();

  REQRejoinGame(const REQRejoinGame& from);

  inline REQRejoinGame& operator=(const REQRejoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQRejoinGame& default_instance();

  void Swap(REQRejoinGame* other);

  // implements Message ----------------------------------------------

  REQRejoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQRejoinGame& from);
  void MergeFrom(const REQRejoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required bytes session_key = 2;
  inline bool has_session_key() const;
  inline void clear_session_key();
  static const int kSessionKeyFieldNumber = 2;
  inline const ::std::string& session_key() const;
  inline void set_session_key(const ::std::string& value);
  inline void set_session_key(const char* value);
  inline void set_session_key(const void* value, size_t size);
  inline ::std::string* mutable_session_key();
  inline ::std::string* release_session_key();
  inline void set_allocated_session_key(::std::string* session_key);

  // required int32 client_version = 3;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::int32 client_version() const;
  inline void set_client_version(::google::protobuf::int32 value);

  // required int32 table_id = 4;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 4;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // required int32 seat_id = 5;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 5;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // required int32 seq_id = 6;
  inline bool has_seq_id() const;
  inline void clear_seq_id();
  static const int kSeqIdFieldNumber = 6;
  inline ::google::protobuf::int32 seq_id() const;
  inline void set_seq_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:REQRejoinGame)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_key();
  inline void clear_has_session_key();
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_seq_id();
  inline void clear_has_seq_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::std::string* session_key_;
  ::google::protobuf::int32 client_version_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 seq_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQRejoinGame* default_instance_;
};
// -------------------------------------------------------------------

class ACKRejoinGame : public ::google::protobuf::Message {
 public:
  ACKRejoinGame();
  virtual ~ACKRejoinGame();

  ACKRejoinGame(const ACKRejoinGame& from);

  inline ACKRejoinGame& operator=(const ACKRejoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKRejoinGame& default_instance();

  void Swap(ACKRejoinGame* other);

  // implements Message ----------------------------------------------

  ACKRejoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKRejoinGame& from);
  void MergeFrom(const ACKRejoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKRejoinGame)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKRejoinGame* default_instance_;
};
// -------------------------------------------------------------------

class REQPrivySitDown : public ::google::protobuf::Message {
 public:
  REQPrivySitDown();
  virtual ~REQPrivySitDown();

  REQPrivySitDown(const REQPrivySitDown& from);

  inline REQPrivySitDown& operator=(const REQPrivySitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQPrivySitDown& default_instance();

  void Swap(REQPrivySitDown* other);

  // implements Message ----------------------------------------------

  REQPrivySitDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQPrivySitDown& from);
  void MergeFrom(const REQPrivySitDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:REQPrivySitDown)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQPrivySitDown* default_instance_;
};
// -------------------------------------------------------------------

class ACKPrivySitDown : public ::google::protobuf::Message {
 public:
  ACKPrivySitDown();
  virtual ~ACKPrivySitDown();

  ACKPrivySitDown(const ACKPrivySitDown& from);

  inline ACKPrivySitDown& operator=(const ACKPrivySitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKPrivySitDown& default_instance();

  void Swap(ACKPrivySitDown* other);

  // implements Message ----------------------------------------------

  ACKPrivySitDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKPrivySitDown& from);
  void MergeFrom(const ACKPrivySitDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result_id = 1;
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKPrivySitDown)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKPrivySitDown* default_instance_;
};
// -------------------------------------------------------------------

class REQReady : public ::google::protobuf::Message {
 public:
  REQReady();
  virtual ~REQReady();

  REQReady(const REQReady& from);

  inline REQReady& operator=(const REQReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQReady& default_instance();

  void Swap(REQReady* other);

  // implements Message ----------------------------------------------

  REQReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQReady& from);
  void MergeFrom(const REQReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:REQReady)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQReady* default_instance_;
};
// -------------------------------------------------------------------

class ACKReady : public ::google::protobuf::Message {
 public:
  ACKReady();
  virtual ~ACKReady();

  ACKReady(const ACKReady& from);

  inline ACKReady& operator=(const ACKReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKReady& default_instance();

  void Swap(ACKReady* other);

  // implements Message ----------------------------------------------

  ACKReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKReady& from);
  void MergeFrom(const ACKReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_id = 1 [default = 0];
  inline bool has_result_id() const;
  inline void clear_result_id();
  static const int kResultIdFieldNumber = 1;
  inline ::google::protobuf::int32 result_id() const;
  inline void set_result_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ACKReady)
 private:
  inline void set_has_result_id();
  inline void clear_has_result_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ACKReady* default_instance_;
};
// -------------------------------------------------------------------

class TableEventItem : public ::google::protobuf::Message {
 public:
  TableEventItem();
  virtual ~TableEventItem();

  TableEventItem(const TableEventItem& from);

  inline TableEventItem& operator=(const TableEventItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableEventItem& default_instance();

  void Swap(TableEventItem* other);

  // implements Message ----------------------------------------------

  TableEventItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableEventItem& from);
  void MergeFrom(const TableEventItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_type = 1;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // optional int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 kick_reason = 4;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 4;
  inline ::google::protobuf::int32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::int32 value);

  // optional int64 kicked_user_id = 5;
  inline bool has_kicked_user_id() const;
  inline void clear_kicked_user_id();
  static const int kKickedUserIdFieldNumber = 5;
  inline ::google::protobuf::int64 kicked_user_id() const;
  inline void set_kicked_user_id(::google::protobuf::int64 value);

  // optional bytes pb_buffer = 6;
  inline bool has_pb_buffer() const;
  inline void clear_pb_buffer();
  static const int kPbBufferFieldNumber = 6;
  inline const ::std::string& pb_buffer() const;
  inline void set_pb_buffer(const ::std::string& value);
  inline void set_pb_buffer(const char* value);
  inline void set_pb_buffer(const void* value, size_t size);
  inline ::std::string* mutable_pb_buffer();
  inline ::std::string* release_pb_buffer();
  inline void set_allocated_pb_buffer(::std::string* pb_buffer);

  // @@protoc_insertion_point(class_scope:TableEventItem)
 private:
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  inline void set_has_kicked_user_id();
  inline void clear_has_kicked_user_id();
  inline void set_has_pb_buffer();
  inline void clear_has_pb_buffer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int64 kicked_user_id_;
  ::std::string* pb_buffer_;
  ::google::protobuf::int32 kick_reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static TableEventItem* default_instance_;
};
// -------------------------------------------------------------------

class TableInfoItem : public ::google::protobuf::Message {
 public:
  TableInfoItem();
  virtual ~TableInfoItem();

  TableInfoItem(const TableInfoItem& from);

  inline TableInfoItem& operator=(const TableInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInfoItem& default_instance();

  void Swap(TableInfoItem* other);

  // implements Message ----------------------------------------------

  TableInfoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInfoItem& from);
  void MergeFrom(const TableInfoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // required int32 identity_type = 3;
  inline bool has_identity_type() const;
  inline void clear_identity_type();
  static const int kIdentityTypeFieldNumber = 3;
  inline ::google::protobuf::int32 identity_type() const;
  inline void set_identity_type(::google::protobuf::int32 value);

  // required int32 state_type = 4;
  inline bool has_state_type() const;
  inline void clear_state_type();
  static const int kStateTypeFieldNumber = 4;
  inline ::google::protobuf::int32 state_type() const;
  inline void set_state_type(::google::protobuf::int32 value);

  // optional int32 state_line = 5;
  inline bool has_state_line() const;
  inline void clear_state_line();
  static const int kStateLineFieldNumber = 5;
  inline ::google::protobuf::int32 state_line() const;
  inline void set_state_line(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TableInfoItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_identity_type();
  inline void clear_has_identity_type();
  inline void set_has_state_type();
  inline void clear_has_state_type();
  inline void set_has_state_line();
  inline void clear_has_state_line();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 identity_type_;
  ::google::protobuf::int32 state_type_;
  ::google::protobuf::int32 state_line_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static TableInfoItem* default_instance_;
};
// -------------------------------------------------------------------

class TableInfo : public ::google::protobuf::Message {
 public:
  TableInfo();
  virtual ~TableInfo();

  TableInfo(const TableInfo& from);

  inline TableInfo& operator=(const TableInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableInfo& default_instance();

  void Swap(TableInfo* other);

  // implements Message ----------------------------------------------

  TableInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableInfo& from);
  void MergeFrom(const TableInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TableInfoItem info_list = 1;
  inline int info_list_size() const;
  inline void clear_info_list();
  static const int kInfoListFieldNumber = 1;
  inline const ::TableInfoItem& info_list(int index) const;
  inline ::TableInfoItem* mutable_info_list(int index);
  inline ::TableInfoItem* add_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::TableInfoItem >&
      info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::TableInfoItem >*
      mutable_info_list();

  // @@protoc_insertion_point(class_scope:TableInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TableInfoItem > info_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static TableInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gender = 1;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 1;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);

  // optional bytes face = 2;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 2;
  inline const ::std::string& face() const;
  inline void set_face(const ::std::string& value);
  inline void set_face(const char* value);
  inline void set_face(const void* value, size_t size);
  inline ::std::string* mutable_face();
  inline ::std::string* release_face();
  inline void set_allocated_face(::std::string* face);

  // optional bytes nick = 3;
  inline bool has_nick() const;
  inline void clear_nick();
  static const int kNickFieldNumber = 3;
  inline const ::std::string& nick() const;
  inline void set_nick(const ::std::string& value);
  inline void set_nick(const char* value);
  inline void set_nick(const void* value, size_t size);
  inline ::std::string* mutable_nick();
  inline ::std::string* release_nick();
  inline void set_allocated_nick(::std::string* nick);

  // optional bytes loginip = 4;
  inline bool has_loginip() const;
  inline void clear_loginip();
  static const int kLoginipFieldNumber = 4;
  inline const ::std::string& loginip() const;
  inline void set_loginip(const ::std::string& value);
  inline void set_loginip(const char* value);
  inline void set_loginip(const void* value, size_t size);
  inline ::std::string* mutable_loginip();
  inline ::std::string* release_loginip();
  inline void set_allocated_loginip(::std::string* loginip);

  // @@protoc_insertion_point(class_scope:UserInfo)
 private:
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_nick();
  inline void clear_has_nick();
  inline void set_has_loginip();
  inline void clear_has_loginip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* face_;
  ::std::string* nick_;
  ::std::string* loginip_;
  ::google::protobuf::int32 gender_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class NTFTableEvent : public ::google::protobuf::Message {
 public:
  NTFTableEvent();
  virtual ~NTFTableEvent();

  NTFTableEvent(const NTFTableEvent& from);

  inline NTFTableEvent& operator=(const NTFTableEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFTableEvent& default_instance();

  void Swap(NTFTableEvent* other);

  // implements Message ----------------------------------------------

  NTFTableEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFTableEvent& from);
  void MergeFrom(const NTFTableEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TableEventItem event_list = 1;
  inline int event_list_size() const;
  inline void clear_event_list();
  static const int kEventListFieldNumber = 1;
  inline const ::TableEventItem& event_list(int index) const;
  inline ::TableEventItem* mutable_event_list(int index);
  inline ::TableEventItem* add_event_list();
  inline const ::google::protobuf::RepeatedPtrField< ::TableEventItem >&
      event_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::TableEventItem >*
      mutable_event_list();

  // @@protoc_insertion_point(class_scope:NTFTableEvent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TableEventItem > event_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFTableEvent* default_instance_;
};
// -------------------------------------------------------------------

class PlayerGameInfo : public ::google::protobuf::Message {
 public:
  PlayerGameInfo();
  virtual ~PlayerGameInfo();

  PlayerGameInfo(const PlayerGameInfo& from);

  inline PlayerGameInfo& operator=(const PlayerGameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGameInfo& default_instance();

  void Swap(PlayerGameInfo* other);

  // implements Message ----------------------------------------------

  PlayerGameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerGameInfo& from);
  void MergeFrom(const PlayerGameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 wins = 3;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 3;
  inline ::google::protobuf::int32 wins() const;
  inline void set_wins(::google::protobuf::int32 value);

  // optional int32 loses = 4;
  inline bool has_loses() const;
  inline void clear_loses();
  static const int kLosesFieldNumber = 4;
  inline ::google::protobuf::int32 loses() const;
  inline void set_loses(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerGameInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_loses();
  inline void clear_has_loses();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 wins_;
  ::google::protobuf::int32 loses_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static PlayerGameInfo* default_instance_;
};
// -------------------------------------------------------------------

class NTFGameInit : public ::google::protobuf::Message {
 public:
  NTFGameInit();
  virtual ~NTFGameInit();

  NTFGameInit(const NTFGameInit& from);

  inline NTFGameInit& operator=(const NTFGameInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFGameInit& default_instance();

  void Swap(NTFGameInit* other);

  // implements Message ----------------------------------------------

  NTFGameInit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFGameInit& from);
  void MergeFrom(const NTFGameInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:NTFGameInit)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFGameInit* default_instance_;
};
// -------------------------------------------------------------------

class NTFDealCards : public ::google::protobuf::Message {
 public:
  NTFDealCards();
  virtual ~NTFDealCards();

  NTFDealCards(const NTFDealCards& from);

  inline NTFDealCards& operator=(const NTFDealCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFDealCards& default_instance();

  void Swap(NTFDealCards* other);

  // implements Message ----------------------------------------------

  NTFDealCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFDealCards& from);
  void MergeFrom(const NTFDealCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 card_id = 1;
  inline int card_id_size() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::int32 card_id(int index) const;
  inline void set_card_id(int index, ::google::protobuf::int32 value);
  inline void add_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_id();

  // optional int64 fst_user = 2;
  inline bool has_fst_user() const;
  inline void clear_fst_user();
  static const int kFstUserFieldNumber = 2;
  inline ::google::protobuf::int64 fst_user() const;
  inline void set_fst_user(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NTFDealCards)
 private:
  inline void set_has_fst_user();
  inline void clear_has_fst_user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_id_;
  ::google::protobuf::int64 fst_user_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFDealCards* default_instance_;
};
// -------------------------------------------------------------------

class REQDealEnd : public ::google::protobuf::Message {
 public:
  REQDealEnd();
  virtual ~REQDealEnd();

  REQDealEnd(const REQDealEnd& from);

  inline REQDealEnd& operator=(const REQDealEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQDealEnd& default_instance();

  void Swap(REQDealEnd* other);

  // implements Message ----------------------------------------------

  REQDealEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQDealEnd& from);
  void MergeFrom(const REQDealEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:REQDealEnd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQDealEnd* default_instance_;
};
// -------------------------------------------------------------------

class NTFToken : public ::google::protobuf::Message {
 public:
  NTFToken();
  virtual ~NTFToken();

  NTFToken(const NTFToken& from);

  inline NTFToken& operator=(const NTFToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFToken& default_instance();

  void Swap(NTFToken* other);

  // implements Message ----------------------------------------------

  NTFToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFToken& from);
  void MergeFrom(const NTFToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::int64 value);
  inline void add_user_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_user_id();

  // optional int32 token_type = 2;
  inline bool has_token_type() const;
  inline void clear_token_type();
  static const int kTokenTypeFieldNumber = 2;
  inline ::google::protobuf::int32 token_type() const;
  inline void set_token_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NTFToken)
 private:
  inline void set_has_token_type();
  inline void clear_has_token_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_id_;
  ::google::protobuf::int32 token_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFToken* default_instance_;
};
// -------------------------------------------------------------------

class REQPlayCards : public ::google::protobuf::Message {
 public:
  REQPlayCards();
  virtual ~REQPlayCards();

  REQPlayCards(const REQPlayCards& from);

  inline REQPlayCards& operator=(const REQPlayCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQPlayCards& default_instance();

  void Swap(REQPlayCards* other);

  // implements Message ----------------------------------------------

  REQPlayCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQPlayCards& from);
  void MergeFrom(const REQPlayCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 card_id = 1;
  inline int card_id_size() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::int32 card_id(int index) const;
  inline void set_card_id(int index, ::google::protobuf::int32 value);
  inline void add_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_id();

  // @@protoc_insertion_point(class_scope:REQPlayCards)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQPlayCards* default_instance_;
};
// -------------------------------------------------------------------

class NTFPlayCards : public ::google::protobuf::Message {
 public:
  NTFPlayCards();
  virtual ~NTFPlayCards();

  NTFPlayCards(const NTFPlayCards& from);

  inline NTFPlayCards& operator=(const NTFPlayCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFPlayCards& default_instance();

  void Swap(NTFPlayCards* other);

  // implements Message ----------------------------------------------

  NTFPlayCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFPlayCards& from);
  void MergeFrom(const NTFPlayCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // repeated int32 card_id = 2;
  inline int card_id_size() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  inline ::google::protobuf::int32 card_id(int index) const;
  inline void set_card_id(int index, ::google::protobuf::int32 value);
  inline void add_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_id();

  // @@protoc_insertion_point(class_scope:NTFPlayCards)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFPlayCards* default_instance_;
};
// -------------------------------------------------------------------

class NTFPassCards : public ::google::protobuf::Message {
 public:
  NTFPassCards();
  virtual ~NTFPassCards();

  NTFPassCards(const NTFPassCards& from);

  inline NTFPassCards& operator=(const NTFPassCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFPassCards& default_instance();

  void Swap(NTFPassCards* other);

  // implements Message ----------------------------------------------

  NTFPassCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFPassCards& from);
  void MergeFrom(const NTFPassCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NTFPassCards)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFPassCards* default_instance_;
};
// -------------------------------------------------------------------

class NTFResetCards : public ::google::protobuf::Message {
 public:
  NTFResetCards();
  virtual ~NTFResetCards();

  NTFResetCards(const NTFResetCards& from);

  inline NTFResetCards& operator=(const NTFResetCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFResetCards& default_instance();

  void Swap(NTFResetCards* other);

  // implements Message ----------------------------------------------

  NTFResetCards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFResetCards& from);
  void MergeFrom(const NTFResetCards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code_id = 1;
  inline bool has_code_id() const;
  inline void clear_code_id();
  static const int kCodeIdFieldNumber = 1;
  inline ::google::protobuf::int32 code_id() const;
  inline void set_code_id(::google::protobuf::int32 value);

  // repeated int32 card_id = 2;
  inline int card_id_size() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  inline ::google::protobuf::int32 card_id(int index) const;
  inline void set_card_id(int index, ::google::protobuf::int32 value);
  inline void add_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_id();

  // repeated int32 played_id = 3;
  inline int played_id_size() const;
  inline void clear_played_id();
  static const int kPlayedIdFieldNumber = 3;
  inline ::google::protobuf::int32 played_id(int index) const;
  inline void set_played_id(int index, ::google::protobuf::int32 value);
  inline void add_played_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      played_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_played_id();

  // @@protoc_insertion_point(class_scope:NTFResetCards)
 private:
  inline void set_has_code_id();
  inline void clear_has_code_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > played_id_;
  ::google::protobuf::int32 code_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFResetCards* default_instance_;
};
// -------------------------------------------------------------------

class ResultItem : public ::google::protobuf::Message {
 public:
  ResultItem();
  virtual ~ResultItem();

  ResultItem(const ResultItem& from);

  inline ResultItem& operator=(const ResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultItem& default_instance();

  void Swap(ResultItem* other);

  // implements Message ----------------------------------------------

  ResultItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResultItem& from);
  void MergeFrom(const ResultItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional int32 result_type = 2;
  inline bool has_result_type() const;
  inline void clear_result_type();
  static const int kResultTypeFieldNumber = 2;
  inline ::google::protobuf::int32 result_type() const;
  inline void set_result_type(::google::protobuf::int32 value);

  // repeated int32 card_id = 3;
  inline int card_id_size() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 3;
  inline ::google::protobuf::int32 card_id(int index) const;
  inline void set_card_id(int index, ::google::protobuf::int32 value);
  inline void add_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card_id();

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 totalscore = 5;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 5;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // optional int32 baopei = 6;
  inline bool has_baopei() const;
  inline void clear_baopei();
  static const int kBaopeiFieldNumber = 6;
  inline ::google::protobuf::int32 baopei() const;
  inline void set_baopei(::google::protobuf::int32 value);

  // optional int32 lastscore = 7;
  inline bool has_lastscore() const;
  inline void clear_lastscore();
  static const int kLastscoreFieldNumber = 7;
  inline ::google::protobuf::int32 lastscore() const;
  inline void set_lastscore(::google::protobuf::int32 value);

  // optional int32 bombscore = 8;
  inline bool has_bombscore() const;
  inline void clear_bombscore();
  static const int kBombscoreFieldNumber = 8;
  inline ::google::protobuf::int32 bombscore() const;
  inline void set_bombscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ResultItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_result_type();
  inline void clear_has_result_type();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_baopei();
  inline void clear_has_baopei();
  inline void set_has_lastscore();
  inline void clear_has_lastscore();
  inline void set_has_bombscore();
  inline void clear_has_bombscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_id_;
  ::google::protobuf::int32 result_type_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 totalscore_;
  ::google::protobuf::int32 baopei_;
  ::google::protobuf::int32 lastscore_;
  ::google::protobuf::int32 bombscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static ResultItem* default_instance_;
};
// -------------------------------------------------------------------

class NTFResult : public ::google::protobuf::Message {
 public:
  NTFResult();
  virtual ~NTFResult();

  NTFResult(const NTFResult& from);

  inline NTFResult& operator=(const NTFResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFResult& default_instance();

  void Swap(NTFResult* other);

  // implements Message ----------------------------------------------

  NTFResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFResult& from);
  void MergeFrom(const NTFResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ResultItem result_list = 1;
  inline int result_list_size() const;
  inline void clear_result_list();
  static const int kResultListFieldNumber = 1;
  inline const ::ResultItem& result_list(int index) const;
  inline ::ResultItem* mutable_result_list(int index);
  inline ::ResultItem* add_result_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ResultItem >&
      result_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ResultItem >*
      mutable_result_list();

  // @@protoc_insertion_point(class_scope:NTFResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ResultItem > result_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFResult* default_instance_;
};
// -------------------------------------------------------------------

class BombResultItem : public ::google::protobuf::Message {
 public:
  BombResultItem();
  virtual ~BombResultItem();

  BombResultItem(const BombResultItem& from);

  inline BombResultItem& operator=(const BombResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BombResultItem& default_instance();

  void Swap(BombResultItem* other);

  // implements Message ----------------------------------------------

  BombResultItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BombResultItem& from);
  void MergeFrom(const BombResultItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional int32 score_chg = 2;
  inline bool has_score_chg() const;
  inline void clear_score_chg();
  static const int kScoreChgFieldNumber = 2;
  inline ::google::protobuf::int32 score_chg() const;
  inline void set_score_chg(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BombResultItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_score_chg();
  inline void clear_has_score_chg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 score_chg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static BombResultItem* default_instance_;
};
// -------------------------------------------------------------------

class NTFBombResult : public ::google::protobuf::Message {
 public:
  NTFBombResult();
  virtual ~NTFBombResult();

  NTFBombResult(const NTFBombResult& from);

  inline NTFBombResult& operator=(const NTFBombResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFBombResult& default_instance();

  void Swap(NTFBombResult* other);

  // implements Message ----------------------------------------------

  NTFBombResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFBombResult& from);
  void MergeFrom(const NTFBombResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BombResultItem result_list = 1;
  inline int result_list_size() const;
  inline void clear_result_list();
  static const int kResultListFieldNumber = 1;
  inline const ::BombResultItem& result_list(int index) const;
  inline ::BombResultItem* mutable_result_list(int index);
  inline ::BombResultItem* add_result_list();
  inline const ::google::protobuf::RepeatedPtrField< ::BombResultItem >&
      result_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::BombResultItem >*
      mutable_result_list();

  // @@protoc_insertion_point(class_scope:NTFBombResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BombResultItem > result_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFBombResult* default_instance_;
};
// -------------------------------------------------------------------

class FinalResultItem : public ::google::protobuf::Message {
 public:
  FinalResultItem();
  virtual ~FinalResultItem();

  FinalResultItem(const FinalResultItem& from);

  inline FinalResultItem& operator=(const FinalResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinalResultItem& default_instance();

  void Swap(FinalResultItem* other);

  // implements Message ----------------------------------------------

  FinalResultItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinalResultItem& from);
  void MergeFrom(const FinalResultItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional int32 single_max_score = 2;
  inline bool has_single_max_score() const;
  inline void clear_single_max_score();
  static const int kSingleMaxScoreFieldNumber = 2;
  inline ::google::protobuf::int32 single_max_score() const;
  inline void set_single_max_score(::google::protobuf::int32 value);

  // optional int32 bombcnt = 3;
  inline bool has_bombcnt() const;
  inline void clear_bombcnt();
  static const int kBombcntFieldNumber = 3;
  inline ::google::protobuf::int32 bombcnt() const;
  inline void set_bombcnt(::google::protobuf::int32 value);

  // optional int32 wins = 4;
  inline bool has_wins() const;
  inline void clear_wins();
  static const int kWinsFieldNumber = 4;
  inline ::google::protobuf::int32 wins() const;
  inline void set_wins(::google::protobuf::int32 value);

  // optional int32 loses = 5;
  inline bool has_loses() const;
  inline void clear_loses();
  static const int kLosesFieldNumber = 5;
  inline ::google::protobuf::int32 loses() const;
  inline void set_loses(::google::protobuf::int32 value);

  // optional int32 totalscore = 6;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 6;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FinalResultItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_single_max_score();
  inline void clear_has_single_max_score();
  inline void set_has_bombcnt();
  inline void clear_has_bombcnt();
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_loses();
  inline void clear_has_loses();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 single_max_score_;
  ::google::protobuf::int32 bombcnt_;
  ::google::protobuf::int32 wins_;
  ::google::protobuf::int32 loses_;
  ::google::protobuf::int32 totalscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static FinalResultItem* default_instance_;
};
// -------------------------------------------------------------------

class NTFFinalResult : public ::google::protobuf::Message {
 public:
  NTFFinalResult();
  virtual ~NTFFinalResult();

  NTFFinalResult(const NTFFinalResult& from);

  inline NTFFinalResult& operator=(const NTFFinalResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFFinalResult& default_instance();

  void Swap(NTFFinalResult* other);

  // implements Message ----------------------------------------------

  NTFFinalResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFFinalResult& from);
  void MergeFrom(const NTFFinalResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FinalResultItem result_list = 1;
  inline int result_list_size() const;
  inline void clear_result_list();
  static const int kResultListFieldNumber = 1;
  inline const ::FinalResultItem& result_list(int index) const;
  inline ::FinalResultItem* mutable_result_list(int index);
  inline ::FinalResultItem* add_result_list();
  inline const ::google::protobuf::RepeatedPtrField< ::FinalResultItem >&
      result_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::FinalResultItem >*
      mutable_result_list();

  // @@protoc_insertion_point(class_scope:NTFFinalResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FinalResultItem > result_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFFinalResult* default_instance_;
};
// -------------------------------------------------------------------

class NTFGameSchedule : public ::google::protobuf::Message {
 public:
  NTFGameSchedule();
  virtual ~NTFGameSchedule();

  NTFGameSchedule(const NTFGameSchedule& from);

  inline NTFGameSchedule& operator=(const NTFGameSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFGameSchedule& default_instance();

  void Swap(NTFGameSchedule* other);

  // implements Message ----------------------------------------------

  NTFGameSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFGameSchedule& from);
  void MergeFrom(const NTFGameSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count_all = 1;
  inline bool has_count_all() const;
  inline void clear_count_all();
  static const int kCountAllFieldNumber = 1;
  inline ::google::protobuf::int32 count_all() const;
  inline void set_count_all(::google::protobuf::int32 value);

  // optional int32 count_idx = 2;
  inline bool has_count_idx() const;
  inline void clear_count_idx();
  static const int kCountIdxFieldNumber = 2;
  inline ::google::protobuf::int32 count_idx() const;
  inline void set_count_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NTFGameSchedule)
 private:
  inline void set_has_count_all();
  inline void clear_has_count_all();
  inline void set_has_count_idx();
  inline void clear_has_count_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_all_;
  ::google::protobuf::int32 count_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFGameSchedule* default_instance_;
};
// -------------------------------------------------------------------

class BoardInfoItem : public ::google::protobuf::Message {
 public:
  BoardInfoItem();
  virtual ~BoardInfoItem();

  BoardInfoItem(const BoardInfoItem& from);

  inline BoardInfoItem& operator=(const BoardInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BoardInfoItem& default_instance();

  void Swap(BoardInfoItem* other);

  // implements Message ----------------------------------------------

  BoardInfoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BoardInfoItem& from);
  void MergeFrom(const BoardInfoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // repeated int32 curr_card_id = 2;
  inline int curr_card_id_size() const;
  inline void clear_curr_card_id();
  static const int kCurrCardIdFieldNumber = 2;
  inline ::google::protobuf::int32 curr_card_id(int index) const;
  inline void set_curr_card_id(int index, ::google::protobuf::int32 value);
  inline void add_curr_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      curr_card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_curr_card_id();

  // optional int32 left_card_num = 3;
  inline bool has_left_card_num() const;
  inline void clear_left_card_num();
  static const int kLeftCardNumFieldNumber = 3;
  inline ::google::protobuf::int32 left_card_num() const;
  inline void set_left_card_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BoardInfoItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_left_card_num();
  inline void clear_has_left_card_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > curr_card_id_;
  ::google::protobuf::int32 left_card_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static BoardInfoItem* default_instance_;
};
// -------------------------------------------------------------------

class NTFBoardInfo : public ::google::protobuf::Message {
 public:
  NTFBoardInfo();
  virtual ~NTFBoardInfo();

  NTFBoardInfo(const NTFBoardInfo& from);

  inline NTFBoardInfo& operator=(const NTFBoardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFBoardInfo& default_instance();

  void Swap(NTFBoardInfo* other);

  // implements Message ----------------------------------------------

  NTFBoardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFBoardInfo& from);
  void MergeFrom(const NTFBoardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BoardInfoItem info_item = 1;
  inline int info_item_size() const;
  inline void clear_info_item();
  static const int kInfoItemFieldNumber = 1;
  inline const ::BoardInfoItem& info_item(int index) const;
  inline ::BoardInfoItem* mutable_info_item(int index);
  inline ::BoardInfoItem* add_info_item();
  inline const ::google::protobuf::RepeatedPtrField< ::BoardInfoItem >&
      info_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::BoardInfoItem >*
      mutable_info_item();

  // optional int32 curr_token_type = 2;
  inline bool has_curr_token_type() const;
  inline void clear_curr_token_type();
  static const int kCurrTokenTypeFieldNumber = 2;
  inline ::google::protobuf::int32 curr_token_type() const;
  inline void set_curr_token_type(::google::protobuf::int32 value);

  // repeated int64 curr_token_user_id = 3;
  inline int curr_token_user_id_size() const;
  inline void clear_curr_token_user_id();
  static const int kCurrTokenUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 curr_token_user_id(int index) const;
  inline void set_curr_token_user_id(int index, ::google::protobuf::int64 value);
  inline void add_curr_token_user_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      curr_token_user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_curr_token_user_id();

  // repeated int32 remain_card_id = 4;
  inline int remain_card_id_size() const;
  inline void clear_remain_card_id();
  static const int kRemainCardIdFieldNumber = 4;
  inline ::google::protobuf::int32 remain_card_id(int index) const;
  inline void set_remain_card_id(int index, ::google::protobuf::int32 value);
  inline void add_remain_card_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remain_card_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remain_card_id();

  // optional int64 first_user_id = 5;
  inline bool has_first_user_id() const;
  inline void clear_first_user_id();
  static const int kFirstUserIdFieldNumber = 5;
  inline ::google::protobuf::int64 first_user_id() const;
  inline void set_first_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NTFBoardInfo)
 private:
  inline void set_has_curr_token_type();
  inline void clear_has_curr_token_type();
  inline void set_has_first_user_id();
  inline void clear_has_first_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BoardInfoItem > info_item_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > curr_token_user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remain_card_id_;
  ::google::protobuf::int64 first_user_id_;
  ::google::protobuf::int32 curr_token_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFBoardInfo* default_instance_;
};
// -------------------------------------------------------------------

class NTFPropInfo : public ::google::protobuf::Message {
 public:
  NTFPropInfo();
  virtual ~NTFPropInfo();

  NTFPropInfo(const NTFPropInfo& from);

  inline NTFPropInfo& operator=(const NTFPropInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFPropInfo& default_instance();

  void Swap(NTFPropInfo* other);

  // implements Message ----------------------------------------------

  NTFPropInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFPropInfo& from);
  void MergeFrom(const NTFPropInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 propid = 1;
  inline bool has_propid() const;
  inline void clear_propid();
  static const int kPropidFieldNumber = 1;
  inline ::google::protobuf::int32 propid() const;
  inline void set_propid(::google::protobuf::int32 value);

  // optional int32 chg = 2;
  inline bool has_chg() const;
  inline void clear_chg();
  static const int kChgFieldNumber = 2;
  inline ::google::protobuf::int32 chg() const;
  inline void set_chg(::google::protobuf::int32 value);

  // optional int32 left = 3;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 3;
  inline ::google::protobuf::int32 left() const;
  inline void set_left(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NTFPropInfo)
 private:
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_chg();
  inline void clear_has_chg();
  inline void set_has_left();
  inline void clear_has_left();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 propid_;
  ::google::protobuf::int32 chg_;
  ::google::protobuf::int32 left_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFPropInfo* default_instance_;
};
// -------------------------------------------------------------------

class REQChat : public ::google::protobuf::Message {
 public:
  REQChat();
  virtual ~REQChat();

  REQChat(const REQChat& from);

  inline REQChat& operator=(const REQChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const REQChat& default_instance();

  void Swap(REQChat* other);

  // implements Message ----------------------------------------------

  REQChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const REQChat& from);
  void MergeFrom(const REQChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 to_user_id = 1;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::int64 value);

  // optional int32 chat_msg_id = 2;
  inline bool has_chat_msg_id() const;
  inline void clear_chat_msg_id();
  static const int kChatMsgIdFieldNumber = 2;
  inline ::google::protobuf::int32 chat_msg_id() const;
  inline void set_chat_msg_id(::google::protobuf::int32 value);

  // optional bytes chat_msg = 3;
  inline bool has_chat_msg() const;
  inline void clear_chat_msg();
  static const int kChatMsgFieldNumber = 3;
  inline const ::std::string& chat_msg() const;
  inline void set_chat_msg(const ::std::string& value);
  inline void set_chat_msg(const char* value);
  inline void set_chat_msg(const void* value, size_t size);
  inline ::std::string* mutable_chat_msg();
  inline ::std::string* release_chat_msg();
  inline void set_allocated_chat_msg(::std::string* chat_msg);

  // @@protoc_insertion_point(class_scope:REQChat)
 private:
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_chat_msg_id();
  inline void clear_has_chat_msg_id();
  inline void set_has_chat_msg();
  inline void clear_has_chat_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 to_user_id_;
  ::std::string* chat_msg_;
  ::google::protobuf::int32 chat_msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static REQChat* default_instance_;
};
// -------------------------------------------------------------------

class NTFChat : public ::google::protobuf::Message {
 public:
  NTFChat();
  virtual ~NTFChat();

  NTFChat(const NTFChat& from);

  inline NTFChat& operator=(const NTFChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NTFChat& default_instance();

  void Swap(NTFChat* other);

  // implements Message ----------------------------------------------

  NTFChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NTFChat& from);
  void MergeFrom(const NTFChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 send_user_id = 1;
  inline bool has_send_user_id() const;
  inline void clear_send_user_id();
  static const int kSendUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 send_user_id() const;
  inline void set_send_user_id(::google::protobuf::int64 value);

  // optional int32 chat_msg_id = 2;
  inline bool has_chat_msg_id() const;
  inline void clear_chat_msg_id();
  static const int kChatMsgIdFieldNumber = 2;
  inline ::google::protobuf::int32 chat_msg_id() const;
  inline void set_chat_msg_id(::google::protobuf::int32 value);

  // optional bytes chat_msg = 3;
  inline bool has_chat_msg() const;
  inline void clear_chat_msg();
  static const int kChatMsgFieldNumber = 3;
  inline const ::std::string& chat_msg() const;
  inline void set_chat_msg(const ::std::string& value);
  inline void set_chat_msg(const char* value);
  inline void set_chat_msg(const void* value, size_t size);
  inline ::std::string* mutable_chat_msg();
  inline ::std::string* release_chat_msg();
  inline void set_allocated_chat_msg(::std::string* chat_msg);

  // @@protoc_insertion_point(class_scope:NTFChat)
 private:
  inline void set_has_send_user_id();
  inline void clear_has_send_user_id();
  inline void set_has_chat_msg_id();
  inline void clear_has_chat_msg_id();
  inline void set_has_chat_msg();
  inline void clear_has_chat_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 send_user_id_;
  ::std::string* chat_msg_;
  ::google::protobuf::int32 chat_msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static NTFChat* default_instance_;
};
// -------------------------------------------------------------------

class PlayerData : public ::google::protobuf::Message {
 public:
  PlayerData();
  virtual ~PlayerData();

  PlayerData(const PlayerData& from);

  inline PlayerData& operator=(const PlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerData& default_instance();

  void Swap(PlayerData* other);

  // implements Message ----------------------------------------------

  PlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerData& from);
  void MergeFrom(const PlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 player_id() const;
  inline void set_player_id(::google::protobuf::int64 value);

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerData)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 player_id_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static PlayerData* default_instance_;
};
// -------------------------------------------------------------------

class MutiPlayerData : public ::google::protobuf::Message {
 public:
  MutiPlayerData();
  virtual ~MutiPlayerData();

  MutiPlayerData(const MutiPlayerData& from);

  inline MutiPlayerData& operator=(const MutiPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MutiPlayerData& default_instance();

  void Swap(MutiPlayerData* other);

  // implements Message ----------------------------------------------

  MutiPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MutiPlayerData& from);
  void MergeFrom(const MutiPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PlayerData player_data = 1;
  inline int player_data_size() const;
  inline void clear_player_data();
  static const int kPlayerDataFieldNumber = 1;
  inline const ::PlayerData& player_data(int index) const;
  inline ::PlayerData* mutable_player_data(int index);
  inline ::PlayerData* add_player_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerData >&
      player_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerData >*
      mutable_player_data();

  // @@protoc_insertion_point(class_scope:MutiPlayerData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PlayerData > player_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static MutiPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class PdkTypeData : public ::google::protobuf::Message {
 public:
  PdkTypeData();
  virtual ~PdkTypeData();

  PdkTypeData(const PdkTypeData& from);

  inline PdkTypeData& operator=(const PdkTypeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PdkTypeData& default_instance();

  void Swap(PdkTypeData* other);

  // implements Message ----------------------------------------------

  PdkTypeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PdkTypeData& from);
  void MergeFrom(const PdkTypeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 1;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:PdkTypeData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_AssignDesc_paodekuaiProtocol_2eproto();
  friend void protobuf_ShutdownFile_paodekuaiProtocol_2eproto();

  void InitAsDefaultInstance();
  static PdkTypeData* default_instance_;
};
// ===================================================================


// ===================================================================

// REQHold

// -------------------------------------------------------------------

// ACKIsTimeout

// required int32 result_id = 1 [default = 0];
inline bool ACKIsTimeout::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKIsTimeout::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKIsTimeout::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKIsTimeout::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKIsTimeout::result_id() const {
  return result_id_;
}
inline void ACKIsTimeout::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// ACKHold

// optional int32 result_id = 1;
inline bool ACKHold::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKHold::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKHold::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKHold::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKHold::result_id() const {
  return result_id_;
}
inline void ACKHold::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// REQUserLogin

// required int64 user_id = 1;
inline bool REQUserLogin::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQUserLogin::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQUserLogin::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQUserLogin::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 REQUserLogin::user_id() const {
  return user_id_;
}
inline void REQUserLogin::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes session_key = 2;
inline bool REQUserLogin::has_session_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void REQUserLogin::set_has_session_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void REQUserLogin::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void REQUserLogin::clear_session_key() {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    session_key_->clear();
  }
  clear_has_session_key();
}
inline const ::std::string& REQUserLogin::session_key() const {
  return *session_key_;
}
inline void REQUserLogin::set_session_key(const ::std::string& value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQUserLogin::set_session_key(const char* value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQUserLogin::set_session_key(const void* value, size_t size) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* REQUserLogin::mutable_session_key() {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  return session_key_;
}
inline ::std::string* REQUserLogin::release_session_key() {
  clear_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_key_;
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void REQUserLogin::set_allocated_session_key(::std::string* session_key) {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    delete session_key_;
  }
  if (session_key) {
    set_has_session_key();
    session_key_ = session_key;
  } else {
    clear_has_session_key();
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 client_version = 3;
inline bool REQUserLogin::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void REQUserLogin::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void REQUserLogin::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void REQUserLogin::clear_client_version() {
  client_version_ = 0;
  clear_has_client_version();
}
inline ::google::protobuf::int32 REQUserLogin::client_version() const {
  return client_version_;
}
inline void REQUserLogin::set_client_version(::google::protobuf::int32 value) {
  set_has_client_version();
  client_version_ = value;
}

// -------------------------------------------------------------------

// ACKUserLogin

// required int32 result_id = 1 [default = 0];
inline bool ACKUserLogin::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKUserLogin::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKUserLogin::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKUserLogin::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKUserLogin::result_id() const {
  return result_id_;
}
inline void ACKUserLogin::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// SystemHorn

// optional bytes content = 1;
inline bool SystemHorn::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemHorn::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemHorn::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemHorn::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SystemHorn::content() const {
  return *content_;
}
inline void SystemHorn::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SystemHorn::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SystemHorn::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemHorn::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* SystemHorn::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemHorn::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NTFUseHorn

// optional int32 horn_type = 1;
inline bool NTFUseHorn::has_horn_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFUseHorn::set_has_horn_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFUseHorn::clear_has_horn_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFUseHorn::clear_horn_type() {
  horn_type_ = 0;
  clear_has_horn_type();
}
inline ::google::protobuf::int32 NTFUseHorn::horn_type() const {
  return horn_type_;
}
inline void NTFUseHorn::set_horn_type(::google::protobuf::int32 value) {
  set_has_horn_type();
  horn_type_ = value;
}

// optional bytes horn_content = 2;
inline bool NTFUseHorn::has_horn_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFUseHorn::set_has_horn_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFUseHorn::clear_has_horn_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFUseHorn::clear_horn_content() {
  if (horn_content_ != &::google::protobuf::internal::kEmptyString) {
    horn_content_->clear();
  }
  clear_has_horn_content();
}
inline const ::std::string& NTFUseHorn::horn_content() const {
  return *horn_content_;
}
inline void NTFUseHorn::set_horn_content(const ::std::string& value) {
  set_has_horn_content();
  if (horn_content_ == &::google::protobuf::internal::kEmptyString) {
    horn_content_ = new ::std::string;
  }
  horn_content_->assign(value);
}
inline void NTFUseHorn::set_horn_content(const char* value) {
  set_has_horn_content();
  if (horn_content_ == &::google::protobuf::internal::kEmptyString) {
    horn_content_ = new ::std::string;
  }
  horn_content_->assign(value);
}
inline void NTFUseHorn::set_horn_content(const void* value, size_t size) {
  set_has_horn_content();
  if (horn_content_ == &::google::protobuf::internal::kEmptyString) {
    horn_content_ = new ::std::string;
  }
  horn_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NTFUseHorn::mutable_horn_content() {
  set_has_horn_content();
  if (horn_content_ == &::google::protobuf::internal::kEmptyString) {
    horn_content_ = new ::std::string;
  }
  return horn_content_;
}
inline ::std::string* NTFUseHorn::release_horn_content() {
  clear_has_horn_content();
  if (horn_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = horn_content_;
    horn_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NTFUseHorn::set_allocated_horn_content(::std::string* horn_content) {
  if (horn_content_ != &::google::protobuf::internal::kEmptyString) {
    delete horn_content_;
  }
  if (horn_content) {
    set_has_horn_content();
    horn_content_ = horn_content;
  } else {
    clear_has_horn_content();
    horn_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// REQMatchTable

// optional int32 roomid = 1;
inline bool REQMatchTable::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQMatchTable::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQMatchTable::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQMatchTable::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 REQMatchTable::roomid() const {
  return roomid_;
}
inline void REQMatchTable::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// ACKMatchTable

// optional int32 code = 1;
inline bool ACKMatchTable::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKMatchTable::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKMatchTable::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKMatchTable::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ACKMatchTable::code() const {
  return code_;
}
inline void ACKMatchTable::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int32 roomid = 2;
inline bool ACKMatchTable::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ACKMatchTable::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ACKMatchTable::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ACKMatchTable::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 ACKMatchTable::roomid() const {
  return roomid_;
}
inline void ACKMatchTable::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// optional int32 tableid = 3;
inline bool ACKMatchTable::has_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ACKMatchTable::set_has_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ACKMatchTable::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ACKMatchTable::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 ACKMatchTable::tableid() const {
  return tableid_;
}
inline void ACKMatchTable::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
}

// optional int32 seatid = 4;
inline bool ACKMatchTable::has_seatid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ACKMatchTable::set_has_seatid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ACKMatchTable::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ACKMatchTable::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 ACKMatchTable::seatid() const {
  return seatid_;
}
inline void ACKMatchTable::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
}

// -------------------------------------------------------------------

// REQPrivyJoinGame

// required int64 user_id = 1;
inline bool REQPrivyJoinGame::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQPrivyJoinGame::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQPrivyJoinGame::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQPrivyJoinGame::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 REQPrivyJoinGame::user_id() const {
  return user_id_;
}
inline void REQPrivyJoinGame::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes session_key = 2;
inline bool REQPrivyJoinGame::has_session_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void REQPrivyJoinGame::set_has_session_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void REQPrivyJoinGame::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void REQPrivyJoinGame::clear_session_key() {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    session_key_->clear();
  }
  clear_has_session_key();
}
inline const ::std::string& REQPrivyJoinGame::session_key() const {
  return *session_key_;
}
inline void REQPrivyJoinGame::set_session_key(const ::std::string& value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQPrivyJoinGame::set_session_key(const char* value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQPrivyJoinGame::set_session_key(const void* value, size_t size) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* REQPrivyJoinGame::mutable_session_key() {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  return session_key_;
}
inline ::std::string* REQPrivyJoinGame::release_session_key() {
  clear_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_key_;
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void REQPrivyJoinGame::set_allocated_session_key(::std::string* session_key) {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    delete session_key_;
  }
  if (session_key) {
    set_has_session_key();
    session_key_ = session_key;
  } else {
    clear_has_session_key();
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 client_version = 3;
inline bool REQPrivyJoinGame::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void REQPrivyJoinGame::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void REQPrivyJoinGame::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void REQPrivyJoinGame::clear_client_version() {
  client_version_ = 0;
  clear_has_client_version();
}
inline ::google::protobuf::int32 REQPrivyJoinGame::client_version() const {
  return client_version_;
}
inline void REQPrivyJoinGame::set_client_version(::google::protobuf::int32 value) {
  set_has_client_version();
  client_version_ = value;
}

// required int32 table_id = 4;
inline bool REQPrivyJoinGame::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void REQPrivyJoinGame::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void REQPrivyJoinGame::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void REQPrivyJoinGame::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 REQPrivyJoinGame::table_id() const {
  return table_id_;
}
inline void REQPrivyJoinGame::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
}

// -------------------------------------------------------------------

// ACKPrivyJoinGame

// required int32 result_id = 1 [default = 0];
inline bool ACKPrivyJoinGame::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKPrivyJoinGame::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKPrivyJoinGame::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKPrivyJoinGame::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKPrivyJoinGame::result_id() const {
  return result_id_;
}
inline void ACKPrivyJoinGame::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// REQLeaveGame

// -------------------------------------------------------------------

// ACKLeaveGame

// required int32 result_id = 1 [default = 0];
inline bool ACKLeaveGame::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKLeaveGame::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKLeaveGame::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKLeaveGame::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKLeaveGame::result_id() const {
  return result_id_;
}
inline void ACKLeaveGame::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// REQRejoinGame

// required int64 user_id = 1;
inline bool REQRejoinGame::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQRejoinGame::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQRejoinGame::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQRejoinGame::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 REQRejoinGame::user_id() const {
  return user_id_;
}
inline void REQRejoinGame::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes session_key = 2;
inline bool REQRejoinGame::has_session_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void REQRejoinGame::set_has_session_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void REQRejoinGame::clear_has_session_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void REQRejoinGame::clear_session_key() {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    session_key_->clear();
  }
  clear_has_session_key();
}
inline const ::std::string& REQRejoinGame::session_key() const {
  return *session_key_;
}
inline void REQRejoinGame::set_session_key(const ::std::string& value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQRejoinGame::set_session_key(const char* value) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(value);
}
inline void REQRejoinGame::set_session_key(const void* value, size_t size) {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  session_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* REQRejoinGame::mutable_session_key() {
  set_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    session_key_ = new ::std::string;
  }
  return session_key_;
}
inline ::std::string* REQRejoinGame::release_session_key() {
  clear_has_session_key();
  if (session_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_key_;
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void REQRejoinGame::set_allocated_session_key(::std::string* session_key) {
  if (session_key_ != &::google::protobuf::internal::kEmptyString) {
    delete session_key_;
  }
  if (session_key) {
    set_has_session_key();
    session_key_ = session_key;
  } else {
    clear_has_session_key();
    session_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 client_version = 3;
inline bool REQRejoinGame::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void REQRejoinGame::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void REQRejoinGame::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void REQRejoinGame::clear_client_version() {
  client_version_ = 0;
  clear_has_client_version();
}
inline ::google::protobuf::int32 REQRejoinGame::client_version() const {
  return client_version_;
}
inline void REQRejoinGame::set_client_version(::google::protobuf::int32 value) {
  set_has_client_version();
  client_version_ = value;
}

// required int32 table_id = 4;
inline bool REQRejoinGame::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void REQRejoinGame::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void REQRejoinGame::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void REQRejoinGame::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 REQRejoinGame::table_id() const {
  return table_id_;
}
inline void REQRejoinGame::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
}

// required int32 seat_id = 5;
inline bool REQRejoinGame::has_seat_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void REQRejoinGame::set_has_seat_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void REQRejoinGame::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void REQRejoinGame::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 REQRejoinGame::seat_id() const {
  return seat_id_;
}
inline void REQRejoinGame::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// required int32 seq_id = 6;
inline bool REQRejoinGame::has_seq_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void REQRejoinGame::set_has_seq_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void REQRejoinGame::clear_has_seq_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void REQRejoinGame::clear_seq_id() {
  seq_id_ = 0;
  clear_has_seq_id();
}
inline ::google::protobuf::int32 REQRejoinGame::seq_id() const {
  return seq_id_;
}
inline void REQRejoinGame::set_seq_id(::google::protobuf::int32 value) {
  set_has_seq_id();
  seq_id_ = value;
}

// -------------------------------------------------------------------

// ACKRejoinGame

// required int32 result_id = 1 [default = 0];
inline bool ACKRejoinGame::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKRejoinGame::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKRejoinGame::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKRejoinGame::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKRejoinGame::result_id() const {
  return result_id_;
}
inline void ACKRejoinGame::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// REQPrivySitDown

// optional int32 seat_id = 1;
inline bool REQPrivySitDown::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQPrivySitDown::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQPrivySitDown::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQPrivySitDown::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 REQPrivySitDown::seat_id() const {
  return seat_id_;
}
inline void REQPrivySitDown::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// -------------------------------------------------------------------

// ACKPrivySitDown

// optional int32 result_id = 1;
inline bool ACKPrivySitDown::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKPrivySitDown::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKPrivySitDown::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKPrivySitDown::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKPrivySitDown::result_id() const {
  return result_id_;
}
inline void ACKPrivySitDown::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// REQReady

// -------------------------------------------------------------------

// ACKReady

// required int32 result_id = 1 [default = 0];
inline bool ACKReady::has_result_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKReady::set_has_result_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKReady::clear_has_result_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKReady::clear_result_id() {
  result_id_ = 0;
  clear_has_result_id();
}
inline ::google::protobuf::int32 ACKReady::result_id() const {
  return result_id_;
}
inline void ACKReady::set_result_id(::google::protobuf::int32 value) {
  set_has_result_id();
  result_id_ = value;
}

// -------------------------------------------------------------------

// TableEventItem

// required int32 event_type = 1;
inline bool TableEventItem::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableEventItem::set_has_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableEventItem::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableEventItem::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 TableEventItem::event_type() const {
  return event_type_;
}
inline void TableEventItem::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
}

// optional int64 user_id = 2;
inline bool TableEventItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableEventItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableEventItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableEventItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 TableEventItem::user_id() const {
  return user_id_;
}
inline void TableEventItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 seat_id = 3;
inline bool TableEventItem::has_seat_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableEventItem::set_has_seat_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableEventItem::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableEventItem::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 TableEventItem::seat_id() const {
  return seat_id_;
}
inline void TableEventItem::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 kick_reason = 4;
inline bool TableEventItem::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableEventItem::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableEventItem::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableEventItem::clear_kick_reason() {
  kick_reason_ = 0;
  clear_has_kick_reason();
}
inline ::google::protobuf::int32 TableEventItem::kick_reason() const {
  return kick_reason_;
}
inline void TableEventItem::set_kick_reason(::google::protobuf::int32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// optional int64 kicked_user_id = 5;
inline bool TableEventItem::has_kicked_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TableEventItem::set_has_kicked_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TableEventItem::clear_has_kicked_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TableEventItem::clear_kicked_user_id() {
  kicked_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_kicked_user_id();
}
inline ::google::protobuf::int64 TableEventItem::kicked_user_id() const {
  return kicked_user_id_;
}
inline void TableEventItem::set_kicked_user_id(::google::protobuf::int64 value) {
  set_has_kicked_user_id();
  kicked_user_id_ = value;
}

// optional bytes pb_buffer = 6;
inline bool TableEventItem::has_pb_buffer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TableEventItem::set_has_pb_buffer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TableEventItem::clear_has_pb_buffer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TableEventItem::clear_pb_buffer() {
  if (pb_buffer_ != &::google::protobuf::internal::kEmptyString) {
    pb_buffer_->clear();
  }
  clear_has_pb_buffer();
}
inline const ::std::string& TableEventItem::pb_buffer() const {
  return *pb_buffer_;
}
inline void TableEventItem::set_pb_buffer(const ::std::string& value) {
  set_has_pb_buffer();
  if (pb_buffer_ == &::google::protobuf::internal::kEmptyString) {
    pb_buffer_ = new ::std::string;
  }
  pb_buffer_->assign(value);
}
inline void TableEventItem::set_pb_buffer(const char* value) {
  set_has_pb_buffer();
  if (pb_buffer_ == &::google::protobuf::internal::kEmptyString) {
    pb_buffer_ = new ::std::string;
  }
  pb_buffer_->assign(value);
}
inline void TableEventItem::set_pb_buffer(const void* value, size_t size) {
  set_has_pb_buffer();
  if (pb_buffer_ == &::google::protobuf::internal::kEmptyString) {
    pb_buffer_ = new ::std::string;
  }
  pb_buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TableEventItem::mutable_pb_buffer() {
  set_has_pb_buffer();
  if (pb_buffer_ == &::google::protobuf::internal::kEmptyString) {
    pb_buffer_ = new ::std::string;
  }
  return pb_buffer_;
}
inline ::std::string* TableEventItem::release_pb_buffer() {
  clear_has_pb_buffer();
  if (pb_buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pb_buffer_;
    pb_buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TableEventItem::set_allocated_pb_buffer(::std::string* pb_buffer) {
  if (pb_buffer_ != &::google::protobuf::internal::kEmptyString) {
    delete pb_buffer_;
  }
  if (pb_buffer) {
    set_has_pb_buffer();
    pb_buffer_ = pb_buffer;
  } else {
    clear_has_pb_buffer();
    pb_buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TableInfoItem

// required int64 user_id = 1;
inline bool TableInfoItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableInfoItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableInfoItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableInfoItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 TableInfoItem::user_id() const {
  return user_id_;
}
inline void TableInfoItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required int32 seat_id = 2;
inline bool TableInfoItem::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableInfoItem::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableInfoItem::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableInfoItem::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 TableInfoItem::seat_id() const {
  return seat_id_;
}
inline void TableInfoItem::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// required int32 identity_type = 3;
inline bool TableInfoItem::has_identity_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableInfoItem::set_has_identity_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableInfoItem::clear_has_identity_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableInfoItem::clear_identity_type() {
  identity_type_ = 0;
  clear_has_identity_type();
}
inline ::google::protobuf::int32 TableInfoItem::identity_type() const {
  return identity_type_;
}
inline void TableInfoItem::set_identity_type(::google::protobuf::int32 value) {
  set_has_identity_type();
  identity_type_ = value;
}

// required int32 state_type = 4;
inline bool TableInfoItem::has_state_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableInfoItem::set_has_state_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableInfoItem::clear_has_state_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableInfoItem::clear_state_type() {
  state_type_ = 0;
  clear_has_state_type();
}
inline ::google::protobuf::int32 TableInfoItem::state_type() const {
  return state_type_;
}
inline void TableInfoItem::set_state_type(::google::protobuf::int32 value) {
  set_has_state_type();
  state_type_ = value;
}

// optional int32 state_line = 5;
inline bool TableInfoItem::has_state_line() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TableInfoItem::set_has_state_line() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TableInfoItem::clear_has_state_line() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TableInfoItem::clear_state_line() {
  state_line_ = 0;
  clear_has_state_line();
}
inline ::google::protobuf::int32 TableInfoItem::state_line() const {
  return state_line_;
}
inline void TableInfoItem::set_state_line(::google::protobuf::int32 value) {
  set_has_state_line();
  state_line_ = value;
}

// -------------------------------------------------------------------

// TableInfo

// repeated .TableInfoItem info_list = 1;
inline int TableInfo::info_list_size() const {
  return info_list_.size();
}
inline void TableInfo::clear_info_list() {
  info_list_.Clear();
}
inline const ::TableInfoItem& TableInfo::info_list(int index) const {
  return info_list_.Get(index);
}
inline ::TableInfoItem* TableInfo::mutable_info_list(int index) {
  return info_list_.Mutable(index);
}
inline ::TableInfoItem* TableInfo::add_info_list() {
  return info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TableInfoItem >&
TableInfo::info_list() const {
  return info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::TableInfoItem >*
TableInfo::mutable_info_list() {
  return &info_list_;
}

// -------------------------------------------------------------------

// UserInfo

// optional int32 gender = 1;
inline bool UserInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 UserInfo::gender() const {
  return gender_;
}
inline void UserInfo::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
}

// optional bytes face = 2;
inline bool UserInfo::has_face() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfo::set_has_face() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfo::clear_face() {
  if (face_ != &::google::protobuf::internal::kEmptyString) {
    face_->clear();
  }
  clear_has_face();
}
inline const ::std::string& UserInfo::face() const {
  return *face_;
}
inline void UserInfo::set_face(const ::std::string& value) {
  set_has_face();
  if (face_ == &::google::protobuf::internal::kEmptyString) {
    face_ = new ::std::string;
  }
  face_->assign(value);
}
inline void UserInfo::set_face(const char* value) {
  set_has_face();
  if (face_ == &::google::protobuf::internal::kEmptyString) {
    face_ = new ::std::string;
  }
  face_->assign(value);
}
inline void UserInfo::set_face(const void* value, size_t size) {
  set_has_face();
  if (face_ == &::google::protobuf::internal::kEmptyString) {
    face_ = new ::std::string;
  }
  face_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserInfo::mutable_face() {
  set_has_face();
  if (face_ == &::google::protobuf::internal::kEmptyString) {
    face_ = new ::std::string;
  }
  return face_;
}
inline ::std::string* UserInfo::release_face() {
  clear_has_face();
  if (face_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = face_;
    face_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserInfo::set_allocated_face(::std::string* face) {
  if (face_ != &::google::protobuf::internal::kEmptyString) {
    delete face_;
  }
  if (face) {
    set_has_face();
    face_ = face;
  } else {
    clear_has_face();
    face_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes nick = 3;
inline bool UserInfo::has_nick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfo::set_has_nick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfo::clear_has_nick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfo::clear_nick() {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    nick_->clear();
  }
  clear_has_nick();
}
inline const ::std::string& UserInfo::nick() const {
  return *nick_;
}
inline void UserInfo::set_nick(const ::std::string& value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void UserInfo::set_nick(const char* value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void UserInfo::set_nick(const void* value, size_t size) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserInfo::mutable_nick() {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  return nick_;
}
inline ::std::string* UserInfo::release_nick() {
  clear_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_;
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserInfo::set_allocated_nick(::std::string* nick) {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_;
  }
  if (nick) {
    set_has_nick();
    nick_ = nick;
  } else {
    clear_has_nick();
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes loginip = 4;
inline bool UserInfo::has_loginip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInfo::set_has_loginip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInfo::clear_has_loginip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInfo::clear_loginip() {
  if (loginip_ != &::google::protobuf::internal::kEmptyString) {
    loginip_->clear();
  }
  clear_has_loginip();
}
inline const ::std::string& UserInfo::loginip() const {
  return *loginip_;
}
inline void UserInfo::set_loginip(const ::std::string& value) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(value);
}
inline void UserInfo::set_loginip(const char* value) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(value);
}
inline void UserInfo::set_loginip(const void* value, size_t size) {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  loginip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserInfo::mutable_loginip() {
  set_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    loginip_ = new ::std::string;
  }
  return loginip_;
}
inline ::std::string* UserInfo::release_loginip() {
  clear_has_loginip();
  if (loginip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = loginip_;
    loginip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserInfo::set_allocated_loginip(::std::string* loginip) {
  if (loginip_ != &::google::protobuf::internal::kEmptyString) {
    delete loginip_;
  }
  if (loginip) {
    set_has_loginip();
    loginip_ = loginip;
  } else {
    clear_has_loginip();
    loginip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NTFTableEvent

// repeated .TableEventItem event_list = 1;
inline int NTFTableEvent::event_list_size() const {
  return event_list_.size();
}
inline void NTFTableEvent::clear_event_list() {
  event_list_.Clear();
}
inline const ::TableEventItem& NTFTableEvent::event_list(int index) const {
  return event_list_.Get(index);
}
inline ::TableEventItem* NTFTableEvent::mutable_event_list(int index) {
  return event_list_.Mutable(index);
}
inline ::TableEventItem* NTFTableEvent::add_event_list() {
  return event_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TableEventItem >&
NTFTableEvent::event_list() const {
  return event_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::TableEventItem >*
NTFTableEvent::mutable_event_list() {
  return &event_list_;
}

// -------------------------------------------------------------------

// PlayerGameInfo

// optional int64 user_id = 1;
inline bool PlayerGameInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerGameInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerGameInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerGameInfo::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 PlayerGameInfo::user_id() const {
  return user_id_;
}
inline void PlayerGameInfo::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 score = 2;
inline bool PlayerGameInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerGameInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerGameInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerGameInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 PlayerGameInfo::score() const {
  return score_;
}
inline void PlayerGameInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 wins = 3;
inline bool PlayerGameInfo::has_wins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerGameInfo::set_has_wins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerGameInfo::clear_has_wins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerGameInfo::clear_wins() {
  wins_ = 0;
  clear_has_wins();
}
inline ::google::protobuf::int32 PlayerGameInfo::wins() const {
  return wins_;
}
inline void PlayerGameInfo::set_wins(::google::protobuf::int32 value) {
  set_has_wins();
  wins_ = value;
}

// optional int32 loses = 4;
inline bool PlayerGameInfo::has_loses() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerGameInfo::set_has_loses() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerGameInfo::clear_has_loses() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerGameInfo::clear_loses() {
  loses_ = 0;
  clear_has_loses();
}
inline ::google::protobuf::int32 PlayerGameInfo::loses() const {
  return loses_;
}
inline void PlayerGameInfo::set_loses(::google::protobuf::int32 value) {
  set_has_loses();
  loses_ = value;
}

// -------------------------------------------------------------------

// NTFGameInit

// -------------------------------------------------------------------

// NTFDealCards

// repeated int32 card_id = 1;
inline int NTFDealCards::card_id_size() const {
  return card_id_.size();
}
inline void NTFDealCards::clear_card_id() {
  card_id_.Clear();
}
inline ::google::protobuf::int32 NTFDealCards::card_id(int index) const {
  return card_id_.Get(index);
}
inline void NTFDealCards::set_card_id(int index, ::google::protobuf::int32 value) {
  card_id_.Set(index, value);
}
inline void NTFDealCards::add_card_id(::google::protobuf::int32 value) {
  card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NTFDealCards::card_id() const {
  return card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NTFDealCards::mutable_card_id() {
  return &card_id_;
}

// optional int64 fst_user = 2;
inline bool NTFDealCards::has_fst_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFDealCards::set_has_fst_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFDealCards::clear_has_fst_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFDealCards::clear_fst_user() {
  fst_user_ = GOOGLE_LONGLONG(0);
  clear_has_fst_user();
}
inline ::google::protobuf::int64 NTFDealCards::fst_user() const {
  return fst_user_;
}
inline void NTFDealCards::set_fst_user(::google::protobuf::int64 value) {
  set_has_fst_user();
  fst_user_ = value;
}

// -------------------------------------------------------------------

// REQDealEnd

// -------------------------------------------------------------------

// NTFToken

// repeated int64 user_id = 1;
inline int NTFToken::user_id_size() const {
  return user_id_.size();
}
inline void NTFToken::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::int64 NTFToken::user_id(int index) const {
  return user_id_.Get(index);
}
inline void NTFToken::set_user_id(int index, ::google::protobuf::int64 value) {
  user_id_.Set(index, value);
}
inline void NTFToken::add_user_id(::google::protobuf::int64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NTFToken::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NTFToken::mutable_user_id() {
  return &user_id_;
}

// optional int32 token_type = 2;
inline bool NTFToken::has_token_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFToken::set_has_token_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFToken::clear_has_token_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFToken::clear_token_type() {
  token_type_ = 0;
  clear_has_token_type();
}
inline ::google::protobuf::int32 NTFToken::token_type() const {
  return token_type_;
}
inline void NTFToken::set_token_type(::google::protobuf::int32 value) {
  set_has_token_type();
  token_type_ = value;
}

// -------------------------------------------------------------------

// REQPlayCards

// repeated int32 card_id = 1;
inline int REQPlayCards::card_id_size() const {
  return card_id_.size();
}
inline void REQPlayCards::clear_card_id() {
  card_id_.Clear();
}
inline ::google::protobuf::int32 REQPlayCards::card_id(int index) const {
  return card_id_.Get(index);
}
inline void REQPlayCards::set_card_id(int index, ::google::protobuf::int32 value) {
  card_id_.Set(index, value);
}
inline void REQPlayCards::add_card_id(::google::protobuf::int32 value) {
  card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
REQPlayCards::card_id() const {
  return card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
REQPlayCards::mutable_card_id() {
  return &card_id_;
}

// -------------------------------------------------------------------

// NTFPlayCards

// required int64 user_id = 1;
inline bool NTFPlayCards::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFPlayCards::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFPlayCards::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFPlayCards::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 NTFPlayCards::user_id() const {
  return user_id_;
}
inline void NTFPlayCards::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// repeated int32 card_id = 2;
inline int NTFPlayCards::card_id_size() const {
  return card_id_.size();
}
inline void NTFPlayCards::clear_card_id() {
  card_id_.Clear();
}
inline ::google::protobuf::int32 NTFPlayCards::card_id(int index) const {
  return card_id_.Get(index);
}
inline void NTFPlayCards::set_card_id(int index, ::google::protobuf::int32 value) {
  card_id_.Set(index, value);
}
inline void NTFPlayCards::add_card_id(::google::protobuf::int32 value) {
  card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NTFPlayCards::card_id() const {
  return card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NTFPlayCards::mutable_card_id() {
  return &card_id_;
}

// -------------------------------------------------------------------

// NTFPassCards

// required int64 user_id = 1;
inline bool NTFPassCards::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFPassCards::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFPassCards::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFPassCards::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 NTFPassCards::user_id() const {
  return user_id_;
}
inline void NTFPassCards::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// NTFResetCards

// required int32 code_id = 1;
inline bool NTFResetCards::has_code_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFResetCards::set_has_code_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFResetCards::clear_has_code_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFResetCards::clear_code_id() {
  code_id_ = 0;
  clear_has_code_id();
}
inline ::google::protobuf::int32 NTFResetCards::code_id() const {
  return code_id_;
}
inline void NTFResetCards::set_code_id(::google::protobuf::int32 value) {
  set_has_code_id();
  code_id_ = value;
}

// repeated int32 card_id = 2;
inline int NTFResetCards::card_id_size() const {
  return card_id_.size();
}
inline void NTFResetCards::clear_card_id() {
  card_id_.Clear();
}
inline ::google::protobuf::int32 NTFResetCards::card_id(int index) const {
  return card_id_.Get(index);
}
inline void NTFResetCards::set_card_id(int index, ::google::protobuf::int32 value) {
  card_id_.Set(index, value);
}
inline void NTFResetCards::add_card_id(::google::protobuf::int32 value) {
  card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NTFResetCards::card_id() const {
  return card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NTFResetCards::mutable_card_id() {
  return &card_id_;
}

// repeated int32 played_id = 3;
inline int NTFResetCards::played_id_size() const {
  return played_id_.size();
}
inline void NTFResetCards::clear_played_id() {
  played_id_.Clear();
}
inline ::google::protobuf::int32 NTFResetCards::played_id(int index) const {
  return played_id_.Get(index);
}
inline void NTFResetCards::set_played_id(int index, ::google::protobuf::int32 value) {
  played_id_.Set(index, value);
}
inline void NTFResetCards::add_played_id(::google::protobuf::int32 value) {
  played_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NTFResetCards::played_id() const {
  return played_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NTFResetCards::mutable_played_id() {
  return &played_id_;
}

// -------------------------------------------------------------------

// ResultItem

// required int64 user_id = 1;
inline bool ResultItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResultItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResultItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResultItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ResultItem::user_id() const {
  return user_id_;
}
inline void ResultItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 result_type = 2;
inline bool ResultItem::has_result_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResultItem::set_has_result_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResultItem::clear_has_result_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResultItem::clear_result_type() {
  result_type_ = 0;
  clear_has_result_type();
}
inline ::google::protobuf::int32 ResultItem::result_type() const {
  return result_type_;
}
inline void ResultItem::set_result_type(::google::protobuf::int32 value) {
  set_has_result_type();
  result_type_ = value;
}

// repeated int32 card_id = 3;
inline int ResultItem::card_id_size() const {
  return card_id_.size();
}
inline void ResultItem::clear_card_id() {
  card_id_.Clear();
}
inline ::google::protobuf::int32 ResultItem::card_id(int index) const {
  return card_id_.Get(index);
}
inline void ResultItem::set_card_id(int index, ::google::protobuf::int32 value) {
  card_id_.Set(index, value);
}
inline void ResultItem::add_card_id(::google::protobuf::int32 value) {
  card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResultItem::card_id() const {
  return card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResultItem::mutable_card_id() {
  return &card_id_;
}

// optional int32 score = 4;
inline bool ResultItem::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResultItem::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResultItem::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResultItem::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ResultItem::score() const {
  return score_;
}
inline void ResultItem::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 totalscore = 5;
inline bool ResultItem::has_totalscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResultItem::set_has_totalscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResultItem::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResultItem::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 ResultItem::totalscore() const {
  return totalscore_;
}
inline void ResultItem::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// optional int32 baopei = 6;
inline bool ResultItem::has_baopei() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResultItem::set_has_baopei() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResultItem::clear_has_baopei() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResultItem::clear_baopei() {
  baopei_ = 0;
  clear_has_baopei();
}
inline ::google::protobuf::int32 ResultItem::baopei() const {
  return baopei_;
}
inline void ResultItem::set_baopei(::google::protobuf::int32 value) {
  set_has_baopei();
  baopei_ = value;
}

// optional int32 lastscore = 7;
inline bool ResultItem::has_lastscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResultItem::set_has_lastscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResultItem::clear_has_lastscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResultItem::clear_lastscore() {
  lastscore_ = 0;
  clear_has_lastscore();
}
inline ::google::protobuf::int32 ResultItem::lastscore() const {
  return lastscore_;
}
inline void ResultItem::set_lastscore(::google::protobuf::int32 value) {
  set_has_lastscore();
  lastscore_ = value;
}

// optional int32 bombscore = 8;
inline bool ResultItem::has_bombscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResultItem::set_has_bombscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResultItem::clear_has_bombscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResultItem::clear_bombscore() {
  bombscore_ = 0;
  clear_has_bombscore();
}
inline ::google::protobuf::int32 ResultItem::bombscore() const {
  return bombscore_;
}
inline void ResultItem::set_bombscore(::google::protobuf::int32 value) {
  set_has_bombscore();
  bombscore_ = value;
}

// -------------------------------------------------------------------

// NTFResult

// repeated .ResultItem result_list = 1;
inline int NTFResult::result_list_size() const {
  return result_list_.size();
}
inline void NTFResult::clear_result_list() {
  result_list_.Clear();
}
inline const ::ResultItem& NTFResult::result_list(int index) const {
  return result_list_.Get(index);
}
inline ::ResultItem* NTFResult::mutable_result_list(int index) {
  return result_list_.Mutable(index);
}
inline ::ResultItem* NTFResult::add_result_list() {
  return result_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ResultItem >&
NTFResult::result_list() const {
  return result_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ResultItem >*
NTFResult::mutable_result_list() {
  return &result_list_;
}

// -------------------------------------------------------------------

// BombResultItem

// optional int64 user_id = 1;
inline bool BombResultItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BombResultItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BombResultItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BombResultItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 BombResultItem::user_id() const {
  return user_id_;
}
inline void BombResultItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 score_chg = 2;
inline bool BombResultItem::has_score_chg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BombResultItem::set_has_score_chg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BombResultItem::clear_has_score_chg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BombResultItem::clear_score_chg() {
  score_chg_ = 0;
  clear_has_score_chg();
}
inline ::google::protobuf::int32 BombResultItem::score_chg() const {
  return score_chg_;
}
inline void BombResultItem::set_score_chg(::google::protobuf::int32 value) {
  set_has_score_chg();
  score_chg_ = value;
}

// -------------------------------------------------------------------

// NTFBombResult

// repeated .BombResultItem result_list = 1;
inline int NTFBombResult::result_list_size() const {
  return result_list_.size();
}
inline void NTFBombResult::clear_result_list() {
  result_list_.Clear();
}
inline const ::BombResultItem& NTFBombResult::result_list(int index) const {
  return result_list_.Get(index);
}
inline ::BombResultItem* NTFBombResult::mutable_result_list(int index) {
  return result_list_.Mutable(index);
}
inline ::BombResultItem* NTFBombResult::add_result_list() {
  return result_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BombResultItem >&
NTFBombResult::result_list() const {
  return result_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::BombResultItem >*
NTFBombResult::mutable_result_list() {
  return &result_list_;
}

// -------------------------------------------------------------------

// FinalResultItem

// optional int64 user_id = 1;
inline bool FinalResultItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinalResultItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinalResultItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinalResultItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 FinalResultItem::user_id() const {
  return user_id_;
}
inline void FinalResultItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 single_max_score = 2;
inline bool FinalResultItem::has_single_max_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinalResultItem::set_has_single_max_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinalResultItem::clear_has_single_max_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinalResultItem::clear_single_max_score() {
  single_max_score_ = 0;
  clear_has_single_max_score();
}
inline ::google::protobuf::int32 FinalResultItem::single_max_score() const {
  return single_max_score_;
}
inline void FinalResultItem::set_single_max_score(::google::protobuf::int32 value) {
  set_has_single_max_score();
  single_max_score_ = value;
}

// optional int32 bombcnt = 3;
inline bool FinalResultItem::has_bombcnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinalResultItem::set_has_bombcnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinalResultItem::clear_has_bombcnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinalResultItem::clear_bombcnt() {
  bombcnt_ = 0;
  clear_has_bombcnt();
}
inline ::google::protobuf::int32 FinalResultItem::bombcnt() const {
  return bombcnt_;
}
inline void FinalResultItem::set_bombcnt(::google::protobuf::int32 value) {
  set_has_bombcnt();
  bombcnt_ = value;
}

// optional int32 wins = 4;
inline bool FinalResultItem::has_wins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FinalResultItem::set_has_wins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FinalResultItem::clear_has_wins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FinalResultItem::clear_wins() {
  wins_ = 0;
  clear_has_wins();
}
inline ::google::protobuf::int32 FinalResultItem::wins() const {
  return wins_;
}
inline void FinalResultItem::set_wins(::google::protobuf::int32 value) {
  set_has_wins();
  wins_ = value;
}

// optional int32 loses = 5;
inline bool FinalResultItem::has_loses() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FinalResultItem::set_has_loses() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FinalResultItem::clear_has_loses() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FinalResultItem::clear_loses() {
  loses_ = 0;
  clear_has_loses();
}
inline ::google::protobuf::int32 FinalResultItem::loses() const {
  return loses_;
}
inline void FinalResultItem::set_loses(::google::protobuf::int32 value) {
  set_has_loses();
  loses_ = value;
}

// optional int32 totalscore = 6;
inline bool FinalResultItem::has_totalscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FinalResultItem::set_has_totalscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FinalResultItem::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FinalResultItem::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 FinalResultItem::totalscore() const {
  return totalscore_;
}
inline void FinalResultItem::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// -------------------------------------------------------------------

// NTFFinalResult

// repeated .FinalResultItem result_list = 1;
inline int NTFFinalResult::result_list_size() const {
  return result_list_.size();
}
inline void NTFFinalResult::clear_result_list() {
  result_list_.Clear();
}
inline const ::FinalResultItem& NTFFinalResult::result_list(int index) const {
  return result_list_.Get(index);
}
inline ::FinalResultItem* NTFFinalResult::mutable_result_list(int index) {
  return result_list_.Mutable(index);
}
inline ::FinalResultItem* NTFFinalResult::add_result_list() {
  return result_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FinalResultItem >&
NTFFinalResult::result_list() const {
  return result_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::FinalResultItem >*
NTFFinalResult::mutable_result_list() {
  return &result_list_;
}

// -------------------------------------------------------------------

// NTFGameSchedule

// optional int32 count_all = 1;
inline bool NTFGameSchedule::has_count_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFGameSchedule::set_has_count_all() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFGameSchedule::clear_has_count_all() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFGameSchedule::clear_count_all() {
  count_all_ = 0;
  clear_has_count_all();
}
inline ::google::protobuf::int32 NTFGameSchedule::count_all() const {
  return count_all_;
}
inline void NTFGameSchedule::set_count_all(::google::protobuf::int32 value) {
  set_has_count_all();
  count_all_ = value;
}

// optional int32 count_idx = 2;
inline bool NTFGameSchedule::has_count_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFGameSchedule::set_has_count_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFGameSchedule::clear_has_count_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFGameSchedule::clear_count_idx() {
  count_idx_ = 0;
  clear_has_count_idx();
}
inline ::google::protobuf::int32 NTFGameSchedule::count_idx() const {
  return count_idx_;
}
inline void NTFGameSchedule::set_count_idx(::google::protobuf::int32 value) {
  set_has_count_idx();
  count_idx_ = value;
}

// -------------------------------------------------------------------

// BoardInfoItem

// optional int64 user_id = 1;
inline bool BoardInfoItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BoardInfoItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BoardInfoItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BoardInfoItem::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 BoardInfoItem::user_id() const {
  return user_id_;
}
inline void BoardInfoItem::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
}

// repeated int32 curr_card_id = 2;
inline int BoardInfoItem::curr_card_id_size() const {
  return curr_card_id_.size();
}
inline void BoardInfoItem::clear_curr_card_id() {
  curr_card_id_.Clear();
}
inline ::google::protobuf::int32 BoardInfoItem::curr_card_id(int index) const {
  return curr_card_id_.Get(index);
}
inline void BoardInfoItem::set_curr_card_id(int index, ::google::protobuf::int32 value) {
  curr_card_id_.Set(index, value);
}
inline void BoardInfoItem::add_curr_card_id(::google::protobuf::int32 value) {
  curr_card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BoardInfoItem::curr_card_id() const {
  return curr_card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BoardInfoItem::mutable_curr_card_id() {
  return &curr_card_id_;
}

// optional int32 left_card_num = 3;
inline bool BoardInfoItem::has_left_card_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BoardInfoItem::set_has_left_card_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BoardInfoItem::clear_has_left_card_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BoardInfoItem::clear_left_card_num() {
  left_card_num_ = 0;
  clear_has_left_card_num();
}
inline ::google::protobuf::int32 BoardInfoItem::left_card_num() const {
  return left_card_num_;
}
inline void BoardInfoItem::set_left_card_num(::google::protobuf::int32 value) {
  set_has_left_card_num();
  left_card_num_ = value;
}

// -------------------------------------------------------------------

// NTFBoardInfo

// repeated .BoardInfoItem info_item = 1;
inline int NTFBoardInfo::info_item_size() const {
  return info_item_.size();
}
inline void NTFBoardInfo::clear_info_item() {
  info_item_.Clear();
}
inline const ::BoardInfoItem& NTFBoardInfo::info_item(int index) const {
  return info_item_.Get(index);
}
inline ::BoardInfoItem* NTFBoardInfo::mutable_info_item(int index) {
  return info_item_.Mutable(index);
}
inline ::BoardInfoItem* NTFBoardInfo::add_info_item() {
  return info_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BoardInfoItem >&
NTFBoardInfo::info_item() const {
  return info_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::BoardInfoItem >*
NTFBoardInfo::mutable_info_item() {
  return &info_item_;
}

// optional int32 curr_token_type = 2;
inline bool NTFBoardInfo::has_curr_token_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFBoardInfo::set_has_curr_token_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFBoardInfo::clear_has_curr_token_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFBoardInfo::clear_curr_token_type() {
  curr_token_type_ = 0;
  clear_has_curr_token_type();
}
inline ::google::protobuf::int32 NTFBoardInfo::curr_token_type() const {
  return curr_token_type_;
}
inline void NTFBoardInfo::set_curr_token_type(::google::protobuf::int32 value) {
  set_has_curr_token_type();
  curr_token_type_ = value;
}

// repeated int64 curr_token_user_id = 3;
inline int NTFBoardInfo::curr_token_user_id_size() const {
  return curr_token_user_id_.size();
}
inline void NTFBoardInfo::clear_curr_token_user_id() {
  curr_token_user_id_.Clear();
}
inline ::google::protobuf::int64 NTFBoardInfo::curr_token_user_id(int index) const {
  return curr_token_user_id_.Get(index);
}
inline void NTFBoardInfo::set_curr_token_user_id(int index, ::google::protobuf::int64 value) {
  curr_token_user_id_.Set(index, value);
}
inline void NTFBoardInfo::add_curr_token_user_id(::google::protobuf::int64 value) {
  curr_token_user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NTFBoardInfo::curr_token_user_id() const {
  return curr_token_user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NTFBoardInfo::mutable_curr_token_user_id() {
  return &curr_token_user_id_;
}

// repeated int32 remain_card_id = 4;
inline int NTFBoardInfo::remain_card_id_size() const {
  return remain_card_id_.size();
}
inline void NTFBoardInfo::clear_remain_card_id() {
  remain_card_id_.Clear();
}
inline ::google::protobuf::int32 NTFBoardInfo::remain_card_id(int index) const {
  return remain_card_id_.Get(index);
}
inline void NTFBoardInfo::set_remain_card_id(int index, ::google::protobuf::int32 value) {
  remain_card_id_.Set(index, value);
}
inline void NTFBoardInfo::add_remain_card_id(::google::protobuf::int32 value) {
  remain_card_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NTFBoardInfo::remain_card_id() const {
  return remain_card_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NTFBoardInfo::mutable_remain_card_id() {
  return &remain_card_id_;
}

// optional int64 first_user_id = 5;
inline bool NTFBoardInfo::has_first_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NTFBoardInfo::set_has_first_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NTFBoardInfo::clear_has_first_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NTFBoardInfo::clear_first_user_id() {
  first_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_first_user_id();
}
inline ::google::protobuf::int64 NTFBoardInfo::first_user_id() const {
  return first_user_id_;
}
inline void NTFBoardInfo::set_first_user_id(::google::protobuf::int64 value) {
  set_has_first_user_id();
  first_user_id_ = value;
}

// -------------------------------------------------------------------

// NTFPropInfo

// optional int32 propid = 1;
inline bool NTFPropInfo::has_propid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFPropInfo::set_has_propid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFPropInfo::clear_has_propid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFPropInfo::clear_propid() {
  propid_ = 0;
  clear_has_propid();
}
inline ::google::protobuf::int32 NTFPropInfo::propid() const {
  return propid_;
}
inline void NTFPropInfo::set_propid(::google::protobuf::int32 value) {
  set_has_propid();
  propid_ = value;
}

// optional int32 chg = 2;
inline bool NTFPropInfo::has_chg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFPropInfo::set_has_chg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFPropInfo::clear_has_chg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFPropInfo::clear_chg() {
  chg_ = 0;
  clear_has_chg();
}
inline ::google::protobuf::int32 NTFPropInfo::chg() const {
  return chg_;
}
inline void NTFPropInfo::set_chg(::google::protobuf::int32 value) {
  set_has_chg();
  chg_ = value;
}

// optional int32 left = 3;
inline bool NTFPropInfo::has_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NTFPropInfo::set_has_left() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NTFPropInfo::clear_has_left() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NTFPropInfo::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline ::google::protobuf::int32 NTFPropInfo::left() const {
  return left_;
}
inline void NTFPropInfo::set_left(::google::protobuf::int32 value) {
  set_has_left();
  left_ = value;
}

// -------------------------------------------------------------------

// REQChat

// optional int64 to_user_id = 1;
inline bool REQChat::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void REQChat::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void REQChat::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void REQChat::clear_to_user_id() {
  to_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::int64 REQChat::to_user_id() const {
  return to_user_id_;
}
inline void REQChat::set_to_user_id(::google::protobuf::int64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
}

// optional int32 chat_msg_id = 2;
inline bool REQChat::has_chat_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void REQChat::set_has_chat_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void REQChat::clear_has_chat_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void REQChat::clear_chat_msg_id() {
  chat_msg_id_ = 0;
  clear_has_chat_msg_id();
}
inline ::google::protobuf::int32 REQChat::chat_msg_id() const {
  return chat_msg_id_;
}
inline void REQChat::set_chat_msg_id(::google::protobuf::int32 value) {
  set_has_chat_msg_id();
  chat_msg_id_ = value;
}

// optional bytes chat_msg = 3;
inline bool REQChat::has_chat_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void REQChat::set_has_chat_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void REQChat::clear_has_chat_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void REQChat::clear_chat_msg() {
  if (chat_msg_ != &::google::protobuf::internal::kEmptyString) {
    chat_msg_->clear();
  }
  clear_has_chat_msg();
}
inline const ::std::string& REQChat::chat_msg() const {
  return *chat_msg_;
}
inline void REQChat::set_chat_msg(const ::std::string& value) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(value);
}
inline void REQChat::set_chat_msg(const char* value) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(value);
}
inline void REQChat::set_chat_msg(const void* value, size_t size) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* REQChat::mutable_chat_msg() {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  return chat_msg_;
}
inline ::std::string* REQChat::release_chat_msg() {
  clear_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chat_msg_;
    chat_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void REQChat::set_allocated_chat_msg(::std::string* chat_msg) {
  if (chat_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete chat_msg_;
  }
  if (chat_msg) {
    set_has_chat_msg();
    chat_msg_ = chat_msg;
  } else {
    clear_has_chat_msg();
    chat_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NTFChat

// optional int64 send_user_id = 1;
inline bool NTFChat::has_send_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NTFChat::set_has_send_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NTFChat::clear_has_send_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NTFChat::clear_send_user_id() {
  send_user_id_ = GOOGLE_LONGLONG(0);
  clear_has_send_user_id();
}
inline ::google::protobuf::int64 NTFChat::send_user_id() const {
  return send_user_id_;
}
inline void NTFChat::set_send_user_id(::google::protobuf::int64 value) {
  set_has_send_user_id();
  send_user_id_ = value;
}

// optional int32 chat_msg_id = 2;
inline bool NTFChat::has_chat_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NTFChat::set_has_chat_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NTFChat::clear_has_chat_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NTFChat::clear_chat_msg_id() {
  chat_msg_id_ = 0;
  clear_has_chat_msg_id();
}
inline ::google::protobuf::int32 NTFChat::chat_msg_id() const {
  return chat_msg_id_;
}
inline void NTFChat::set_chat_msg_id(::google::protobuf::int32 value) {
  set_has_chat_msg_id();
  chat_msg_id_ = value;
}

// optional bytes chat_msg = 3;
inline bool NTFChat::has_chat_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NTFChat::set_has_chat_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NTFChat::clear_has_chat_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NTFChat::clear_chat_msg() {
  if (chat_msg_ != &::google::protobuf::internal::kEmptyString) {
    chat_msg_->clear();
  }
  clear_has_chat_msg();
}
inline const ::std::string& NTFChat::chat_msg() const {
  return *chat_msg_;
}
inline void NTFChat::set_chat_msg(const ::std::string& value) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(value);
}
inline void NTFChat::set_chat_msg(const char* value) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(value);
}
inline void NTFChat::set_chat_msg(const void* value, size_t size) {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  chat_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NTFChat::mutable_chat_msg() {
  set_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    chat_msg_ = new ::std::string;
  }
  return chat_msg_;
}
inline ::std::string* NTFChat::release_chat_msg() {
  clear_has_chat_msg();
  if (chat_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chat_msg_;
    chat_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NTFChat::set_allocated_chat_msg(::std::string* chat_msg) {
  if (chat_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete chat_msg_;
  }
  if (chat_msg) {
    set_has_chat_msg();
    chat_msg_ = chat_msg;
  } else {
    clear_has_chat_msg();
    chat_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PlayerData

// optional int64 player_id = 1;
inline bool PlayerData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerData::clear_player_id() {
  player_id_ = GOOGLE_LONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::int64 PlayerData::player_id() const {
  return player_id_;
}
inline void PlayerData::set_player_id(::google::protobuf::int64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 seat = 2;
inline bool PlayerData::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerData::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerData::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerData::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 PlayerData::seat() const {
  return seat_;
}
inline void PlayerData::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// MutiPlayerData

// repeated .PlayerData player_data = 1;
inline int MutiPlayerData::player_data_size() const {
  return player_data_.size();
}
inline void MutiPlayerData::clear_player_data() {
  player_data_.Clear();
}
inline const ::PlayerData& MutiPlayerData::player_data(int index) const {
  return player_data_.Get(index);
}
inline ::PlayerData* MutiPlayerData::mutable_player_data(int index) {
  return player_data_.Mutable(index);
}
inline ::PlayerData* MutiPlayerData::add_player_data() {
  return player_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerData >&
MutiPlayerData::player_data() const {
  return player_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerData >*
MutiPlayerData::mutable_player_data() {
  return &player_data_;
}

// -------------------------------------------------------------------

// PdkTypeData

// repeated int32 cards = 1;
inline int PdkTypeData::cards_size() const {
  return cards_.size();
}
inline void PdkTypeData::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 PdkTypeData::cards(int index) const {
  return cards_.Get(index);
}
inline void PdkTypeData::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void PdkTypeData::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PdkTypeData::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PdkTypeData::mutable_cards() {
  return &cards_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_paodekuaiProtocol_2eproto__INCLUDED
